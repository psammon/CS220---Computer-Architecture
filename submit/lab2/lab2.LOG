Script started on 2020-09-10 10:17:19-04:00 [TERM="xterm" TTY="/dev/pts/0" COLUMNS="80" LINES="24"]
psammon1@remote00:~/i220a/submit/lab2$ cd exercises/1-hello-args
psammon1@remote00:~/i220a/submit/lab2/exercises/1-hello-args$ ls -l
total 12
-rw-r----- 1 psammon1 psammon1 343 Sep 10 10:14 hello.c
-rw-r----- 1 psammon1 psammon1  35 Sep 10 10:14 Makefile
-rw-r----- 1 psammon1 psammon1  61 Sep 10 10:14 README
psammon1@remote00:~/i220a/submit/lab2/exercises/1-hello-args$ [Kpsammon1@remote00:~/i220a/submit/lab2/exercises/1-hello-args$ [Kpsammon1@remote00:~/i220a/submit/lab2/exercises/1-hello-args$ README
bash: README: command not found
psammon1@remote00:~/i220a/submit/lab2/exercises/1-hello-args$ ./RED[KADME
bash: ./README: Permission denied
psammon1@remote00:~/i220a/submit/lab2/exercises/1-hello-args$ vim[K[K[Kmake
cc -g -Wall -std=c11    hello.c   -o hello
psammon1@remote00:~/i220a/submit/lab2/exercises/1-hello-args$ ./hello
usage: ./hello NAME...
psammon1@remote00:~/i220a/submit/lab2/exercises/1-hello-args$ ./hello bart lisa
hello bart
hello lisa
hello (null)
psammon1@remote00:~/i220a/submit/lab2/exercises/1-hello-args$ gbd hello
bash: gbd: command not found
psammon1@remote00:~/i220a/submit/lab2/exercises/1-hello-args$ gbd [K[K[Kdb hello
GNU gdb (Debian 8.2.1-2+b3) 8.2.1
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from hello...done.
(gdb) startt bart lisa[1P[C[C[C[C[C[C[C[C[C[C[C
Temporary breakpoint 1 at 0x118b: file hello.c, line 13.
Starting program: /import/linux/home1/psammon1/projects/i220a/submit/lab2/exercises/1-hello-args/hello bart lisa

Temporary breakpoint 1, main (argc=3, argv=0x7fffffffe828) at hello.c:13
13	  if (argc == 1) {
(gdb) 1
Undefined command: "1".  Try "help".
(gdb) l
8	}
9	
10	int 
11	main(int argc, const char *argv[])
12	{
13	  if (argc == 1) {
14	    fprintf(stderr, "usage: %s NAME...\n", argv[0]);
15	    exit(1);
16	  }
17	  else {
(gdb) 
18	    for (int i = 1; i <= argc; i++) {
19	      say_hello(argv[i]);
20	    }
21	  }
22	  return 0;
23	}
(gdb) b say [K_hello
Breakpoint 2 at 0x555555555161: file hello.c, line 7.
(gdb) argc
Undefined command: "argc".  Try "help".
(gdb) p argc
$1 = 3
(gdb) p argv
$2 = (const char **) 0x7fffffffe828
(gdb) p arg[0]
cannot subscript requested type
(gdb) p arg[0]v[0][C[C[C
$3 = 0x7fffffffea9d "/import/linux/home1/psammon1/projects/i220a/submit/lab2/exercises/1-hello-args/hello"
(gdb) p argv[0][K[K1]
$4 = 0x7fffffffeaf2 "bart"
(gdb) p argv[1][C[C[C[C[C[C[Kp argv[1][1P]2]
$5 = 0x7fffffffeaf7 "lisa"
(gdb) p argv[2]1]0]1]2][C[C[C[C[C[C[Kn
18	    for (int i = 1; i <= argc; i++) {
(gdb) n
19	      say_hello(argv[i]);
(gdb) pi[K i
$6 = 1
(gdb) c.[K
Continuing.

Breakpoint 2, say_hello (name=0x7fffffffeaf2 "bart") at hello.c:7
7	  printf("hello %s\n", name);
(gdb)  l
2	#include <stdlib.h>
3	
4	static void
5	say_hello(const char *name)
6	{
7	  printf("hello %s\n", name);
8	}
9	
10	int 
11	main(int argc, const char *argv[])
(gdb) p name
$7 = 0x7fffffffeaf2 "bart"
(gdb) backtrace
#0  say_hello (name=0x7fffffffeaf2 "bart") at hello.c:7
#1  0x00005555555551e5 in main (argc=3, argv=0x7fffffffe828) at hello.c:19
(gdb)  v   [K[K[K[K[Kup
#1  0x00005555555551e5 in main (argc=3, argv=0x7fffffffe828) at hello.c:19
19	      say_hello(argv[i]);
(gdb) p down[K[K[K[K[K[Kdown
#0  say_hello (name=0x7fffffffeaf2 "bart") at hello.c:7
7	  printf("hello %s\n", name);
(gdb) p name
$8 = 0x7fffffffeaf2 "bart"
(gdb) c
Continuing.
hello bart

Breakpoint 2, say_hello (name=0x7fffffffeaf7 "lisa") at hello.c:7
7	  printf("hello %s\n", name);
(gdb) p name
$9 = 0x7fffffffeaf7 "lisa"
(gdb) c
Continuing.
hello lisa

Breakpoint 2, say_hello (name=0x0) at hello.c:7
7	  printf("hello %s\n", name);
(gdb) p name
$10 = 0x0
(gdb) up
#1  0x00005555555551e5 in main (argc=3, argv=0x7fffffffe828) at hello.c:19
19	      say_hello(argv[i]);
(gdb) p i
$11 = 3
(gdb) p argc
$12 = 3
(gdb) q
A debugging session is active.

	Inferior 1 [process 2583625] will be killed.

Quit anyway? (y or n) y
psammon1@remote00:~/i220a/submit/lab2/exercises/1-hello-args$ list[K[K[Ks
hello  hello.c	Makefile  README
psammon1@remote00:~/i220a/submit/lab2/exercises/1-hello-args$ vim heelo[K[K[Kllo.c
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;24r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[24;1H"hello.c" 23L, 343C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m<stdio.h>[m
[35m#include [m[31m<stdlib.h>[m

[32mstatic[m [32mvoid[m
say_hello([32mconst[m [32mchar[m *name)
{
  printf([31m"hello [m[35m%s\n[m[31m"[m, name);
}

[32mint[m
main([32mint[m argc, [32mconst[m [32mchar[m *argv[])
{
  [33mif[m (argc == [31m1[m) {
    fprintf([31mstderr[m, [31m"usage: [m[35m%s[m[31m NAME...[m[35m\n[m[31m"[m, argv[[31m0[m]);
    exit([31m1[m);
  }
  [33melse[m {
    [33mfor[m ([32mint[m i = [31m1[m; i <= argc; i++) {[19;7Hsay_hello(argv[i]);
    }
  }
  [33mreturn[m [31m0[m;
}[24;63H1,1[11CAll[1;1H[?25h[?1000l[?1002h[?25l[24;64H8,25[18;25H[?25h[?25l[24;53Hi[18;25H[24;53H [18;25H[24;1H[1m-- INSERT --[m[24;13H[K[24;63H18,25[9CAll[18;25H[?25h[?25l argc; i++) {[18;37H[K[24;67H4[18;24H[?25h[24;1H[K[18;23H[?25l[24;53H^[[18;23H[24;53H  [18;24H[24;63H18,23[9CAll[18;23H[?25h[?25l[24;53H:[18;23H[24;53H[K[24;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?1002l[?2004l"hello.c" 23L, 342C written[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tpsammon1@remote00:~/i220a/submit/lab2/exercises/1-hello-args$ vim hello.cls[Kgdb hellobd[C[C[C[C[C[C./hello bart lisa[K[3Pmake./README[2PREADME./README[4Pmake./README[2PREADME./README[4Pmake
cc -g -Wall -std=c11    hello.c   -o hello
psammon1@remote00:~/i220a/submit/lab2/exercises/1-hello-args$ makevim hello.cls[Kgdb hellobd[C[C[C[C[C[C./hello bart lisa
hello bart
hello lisa
psammon1@remote00:~/i220a/submit/lab2/exercises/1-hello-args$ ./hello bart lisamake[Kvim hello.cls[Kgdb hellobd[C[C[C[C[C[C./hello bart lisa[K bart lisa[8Pgbd hellodb[C[C[C[C[C[Cbd[C[C[C[C[C[C./hello bart lisa[K[3Pmake./README[2PREADME[1Pls -lcd exercises/1-hello-args[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C-hello[1P-args[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C2-hello-args[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C
[C[C[C[C[C[C[C[K[K[K[Kupper[K[K[Kcase-args
bash: cd: exercises/2-hello-upcase-args: No such file or directory
psammon1@remote00:~/i220a/submit/lab2/exercises/1-hello-args$ cd exercises/2-hello-upcase-args[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccd exercises/2-hello-upcase-args[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccd exercises/2-hello-upcase-args[K[K[K[K[K[K[K[K[K[K[K[K[K[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C  [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[1P./hello bart lisa
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Cmake[K./hello bart lisamake[K./hello bart lisa[Kmake[Kvim hello.cls[Kgdb hellobd[C[C[C[C[C[C./hello bart lisa[K[3Pmake./README[2PREADME[1Pls -lcd exercises/1-hello-args[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[10Pgit push
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[Ccd exercises/1-hello-args[K[K[K[K[K[K[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K
bash: cd: exercises/: No such file or directory
psammon1@remote00:~/i220a/submit/lab2/exercises/1-hello-args$ ls
hello  hello.c	Makefile  README
psammon1@remote00:~/i220a/submit/lab2/exercises/1-hello-args$ lscd exercises/2-he  [A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K
[K[A[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[C[K[K[K[K[K[K[K[K[K[K~
psammon1@remote00:~$ cd ~[2Plscd exercises/2-he [2P./hello bart liscd exercises/2-he [K[K[K[K[K[K/
bash: cd: exercises/: No such file or directory
psammon1@remote00:~$ cd exercises/~exercises//exercises/
bash: cd: /home/psammon1/exercises/: No such file or directory
psammon1@remote00:~$ cd ~/exercises/[2Pexercises/~[K[2Pls [K[K[Kcd cs220/labs/lab2/exercises/2-hello-upcase-args
psammon1@remote00:~/cs220/labs/lab2/exercises/2-hello-upcase-args$ ls
hello.c  Makefile  README
psammon1@remote00:~/cs220/labs/lab2/exercises/2-hello-upcase-args$ make
cc -g -Wall -std=c11    hello.c   -o hello
psammon1@remote00:~/cs220/labs/lab2/exercises/2-hello-upcase-args$ ./hello lisa  bart
Hello Lisa
Hello Bart
psammon1@remote00:~/cs220/labs/lab2/exercises/2-hello-upcase-args$ ./hello 'lisa  simpson' 'bart simpson'
Hello Lisa  SimpsonU
Hello Bart SimpsonûU
psammon1@remote00:~/cs220/labs/lab2/exercises/2-hello-upcase-args$ gdb
GNU gdb (Debian 8.2.1-2+b3) 8.2.1
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word".
(gdb) q
psammon1@remote00:~/cs220/labs/lab2/exercises/2-hello-upcase-args$ gdb hello
GNU gdb (Debian 8.2.1-2+b3) 8.2.1
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from hello...done.
(gdb) q
psammon1@remote00:~/cs220/labs/lab2/exercises/2-hello-upcase-args$ gdb hello[Kls
hello  hello.c	Makefile  README
psammon1@remote00:~/cs220/labs/lab2/exercises/2-hello-upcase-args$ lsgdb hello
GNU gdb (Debian 8.2.1-2+b3) 8.2.1
Copyright (C) 2018 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.
Type "show copying" and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
    <http://www.gnu.org/software/gdb/documentation/>.

For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from hello...done.
(gdb) start bart lisa[K[K[K[K[K [K[K[K[K[K'lisa  simpson' 'bart simpson'
Temporary breakpoint 1 at 0x12be: file hello.c, line 35.
Starting program: /import/linux/home1/psammon1/projects/cs220/labs/lab2/exercises/2-hello-upcase-args/hello 'lisa  simpson' 'bart simpson'

Temporary breakpoint 1, main (argc=3, argv=0x7fffffffe818) at hello.c:35
35	  if (argc == 1) {
(gdb) l
30	}
31	
32	int
33	main(int argc, const char *argv[])
34	{
35	  if (argc == 1) {
36	    fprintf(stderr, "usage: %s NAME...\n", argv[0]);
37	    exit(1);
38	  }
39	  else {
(gdb) 
40	    for (int i = 1; i < argc; i++) {
41	      const char *name = argv[i];
42	      char friendlyName[strlen(name)];
43	      upcase_words(name, friendlyName);
44	      say_hello(friendlyName);
45	    }
46	  }
47	  return 0;
48	}
(gdb) b say [K_hello
Breakpoint 2 at 0x55555555528b: file hello.c, line 29.
(gdb)  [Kq
A debugging session is active.

	Inferior 1 [process 2611635] will be killed.

Quit anyway? (y or n) y
psammon1@remote00:~/cs220/labs/lab2/exercises/2-hello-upcase-args$ vim helloc[K.c
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;24r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[24;1H"hello.c" 48L, 962C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[35m#include [m[31m<ctype.h>[m
[35m#include [m[31m<stdio.h>[m
[35m#include [m[31m<stdlib.h>[m
[35m#include [m[31m<string.h>[m

[34m/** Upcase the initial letter of each word from in, copying the
 *  results into out.  The caller is responsible to ensure that out
 *  has enough space for the strlen(in) characters of in.
 */[m
[32mvoid[m
upcase_words([32mconst[m [32mchar[m in[], [32mchar[m out[])
{
  [32mint[m inWord = [31m0[m;
  [32mint[m n = strlen(in);
  [33mfor[m ([32mint[m i = [31m0[m; i < n; i++) {
    [33mif[m (!inWord && isalpha(in[i])) {[17;7Hout[i] = toupper(in[i]);
    }
    [33melse[m {[20;7Hout[i] = in[i];
    }
    inWord = isalpha(in[i]);
  }[24;63H1,1[11CTop[1;1H[?25h[?1000l[?1002h[?25l[24;53Hi[1;1H[24;53H [1;1H[24;1H[1m-- INSERT --[m[24;13H[K[24;63H1,1[11CTop[1;1H[?25h[?25l[1;23r[1;1H[3M[1;24r[21;1H}

[32mstatic[m [32mvoid[m[24;63H[K[24;63H9,1[11C12%[6;1H[?25h[?25l[1;23r[1;1H[3M[1;24r[21;1Hsay_hello([32mconst[m [32mchar[m *name)
{
  printf([31m"Hello [m[35m%s\n[m[31m"[m, name);[24;63H[K[24;63H12,1[10C24%[6;1H[46m{[18;1H}[6;1H[?25h[?25l[1;23r[m[1;1H[3M[1;24r[21;1H}

[32mint[m[24;63H[K[24;63H15,1[10C36%[3;1H{[15;1H}[6;1H[?25h[?25l[1;23r[1;1H[3M[1;24r[21;1Hmain([32mint[m argc, [32mconst[m [32mchar[m *argv[])
{
  [33mif[m (argc == [31m1[m) {[24;63H[K[24;63H18,1[10C48%[6;1H[?25h[?25l[1;23r[1;1H[3M[1;24r[21;5Hfprintf([31mstderr[m, [31m"usage: [m[35m%s[m[31m NAME...[m[35m\n[m[31m"[m, argv[[31m0[m]);
    exit([31m1[m);
  }[24;63H[K[24;63H21,1[10C60%[6;1H[?25h[?25l[1;23r[1;1H[3M[1;24r[21;3H[33melse[m {
    [33mfor[m ([32mint[m i = [31m1[m; i < argc; i++) {[23;7H[32mconst[m [32mchar[m *name = argv[i];[24;63H[K[24;63H24,1[10C72%[6;1H[?25h[?25l[1;23r[1;1H[3M[1;24r[21;7H[32mchar[m friendlyName[strlen(name)];[22;7Hupcase_words(name, friendlyName);[23;7Hsay_hello(friendlyName);[24;63H[K[24;63H27,1[10C84%[6;1H[?25h[?25l[1;23r[1;1H[3M[1;24r[21;5H}
  }
  [33mreturn[m [31m0[m;[24;63H[K[24;63H30,1[10C96%[4;1H[46m{

}[?25h[?25l[1;23r[m[1;1H[3M[1;24r[21;1H}
[1m[34m~                                                                               [23;1H~                                                                               [m[24;63H[K[24;63H33,1[10CBot[1;1H{

}


[?25h[?25l[1;23r[1;1H[3M[1;24r[21;1H[1m[34m~                                                                               [22;1H~                                                                               [23;1H~                                                                               [m[24;63H[K[24;63H36,1[10CBot[6;1H[?25h[?25l[1;23r[1;1H[3M[1;24r[21;1H[1m[34m~                                                                               [22;1H~                                                                               [23;1H~                                                                               [m[24;63H[K[24;63H39,1[10CBot[6;1H[?25h[?25l[1;23r[1;1H[3M[1;24r[21;1H[1m[34m~                                                                               [22;1H~                                                                               [23;1H~                                                                               [m[24;63H[K[24;63H42,1[10CBot[6;1H[?25h[?25l[1;23r[1;1H[3M[1;24r[21;1H[1m[34m~                                                                               [22;1H~                                                                               [23;1H~                                                                               [m[24;63H[K[24;63H45,1[10CBot[6;1H[?25h[?25l[1;23r[1;1H[3M[1;24r[21;1H[1m[34m~                                                                               [22;1H~                                                                               [23;1H~                                                                               [m[24;63H[K[24;63H48,1[10CBot[6;1H[?25h[?25l[1;23r[1;1H[3M[1;24r[21;1H[1m[34m~                                                                               [22;1H~                                                                               [23;1H~                                                                               [m[24;63H[K[24;63H48,1[10CBot[3;1H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;7Hupcase_words(name, friendlyName);[2;7Hsay_hello(friendlyName);
    }[24;63H[K[24;63H48,1[10CBot[6;1H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;5H[33mfor[m ([32mint[m i = [31m1[m; i < argc; i++) {[2;7H[32mconst[m [32mchar[m *name = argv[i];[3;7H[32mchar[m friendlyName[strlen(name)];[24;63H[K[24;63H48,1[10CBot[9;1H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;5Hexit([31m1[m);
  }
  [33melse[m {[24;63H[K[24;63H48,1[10CBot[12;1H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;1H{
  [33mif[m (argc == [31m1[m) {
    fprintf([31mstderr[m, [31m"usage: [m[35m%s[m[31m NAME...[m[35m\n[m[31m"[m, argv[[31m0[m]);[24;63H[K[24;63H48,1[10CBot[15;1H[?25h[?25l[1;23r[1;1H[3L[1;24r[2;1H[32mint[m
main([32mint[m argc, [32mconst[m [32mchar[m *argv[])[24;63H[K[24;63H48,1[10CBot[18;1H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;1H{
  printf([31m"Hello [m[35m%s\n[m[31m"[m, name);
}[24;63H[K[24;63H48,1[10CBot[21;1H[?25h[?25l[1;23r[1;1H[3L[1;24r[2;1H[32mstatic[m [32mvoid[m
say_hello([32mconst[m [32mchar[m *name)[24;63H[K[24;63H42,1[10C96%[18;1H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;5HinWord = isalpha(in[i]);
  }
}[24;63H[K[24;63H39,1[10C84%[18;1H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;5H[33melse[m {[2;7Hout[i] = in[i];
    }[24;63H[K[24;63H36,1[10C72%[18;1H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;5H[33mif[m (!inWord && isalpha(in[i])) {[2;7Hout[i] = toupper(in[i]);
    }[24;63H[K[24;63H33,1[10C60%[18;1H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;3H[32mint[m inWord = [31m0[m;
  [32mint[m n = strlen(in);
  [33mfor[m ([32mint[m i = [31m0[m; i < n; i++) {[24;63H[K[24;63H30,1[10C48%[16;1H[46m{

}[?25h[?25l[1;23r[m[1;1H[3L[1;24r[1;1H[32mvoid[m
upcase_words([32mconst[m [32mchar[m in[], [32mchar[m out[])
{[24;63H[K[24;63H27,1[10C36%[19;1H{

}[18;1H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;1H[34m *  results into out.  The caller is responsible to ensure that out
 *  has enough space for the strlen(in) characters of in.
 */[m[24;63H[K[24;63H24,1[10C24%[6;1H[46m{[18;1H}[?25h[?25l [m} [46m}[m[24;66H2[18;2H[?25h[24;1H[K[18;1H[?25l[24;53H^[[18;1H[24;53H  [18;2H[6;1H{[18;2H}[24;63H24,1[10C24%[18;1H[?25h[?25l[24;53H:[18;1H[24;53H[K[24;1H:[?2004h[?25hq[?25l[?25h[?25l[1m[37m[41mE37: No write since last change (add ! to override)[?2004h[18;1H[m[24;63H24,1[10C24%[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [17;1H[24;64H3[17;1H[?25h[?25l[24;53H~@k[17;1H[24;53H   [18;1H[24;64H4[18;1H[?25h[?25l[24;53H^M[18;1H[24;53H  [18;1H[1;23r[23;1H
[1;24r[23;1H}[24;1H[K[24;63H25,0-1[8C28%[18;1H[?25h[?25l[24;53H^[[18;1H[24;53H  [18;1H[24;53H^[[18;1H[24;53H  [18;1H[?25h[?25l[24;53H:[18;1H[24;53H[K[24;1H:[?2004h[?25h![?25l[?25hq[?25l[?25h[?25l:!q[?2004l[?1l>[?25h[?1049l[23;0;0t
[No write since last change]
[?1002l[?2004l/bin/bash: q: command not found
[?1002h[?2004h
shell returned 127

Press ENTER or type command to continue[?1002l[?1002h[?1049h[22;0;0t[?1h=[?2004h[?25l[18;1H[27m[23m[29m[m[H[2J[1;1H[34m *  has enough space for the strlen(in) characters of in.
 */[m
[32mvoid[m
upcase_words([32mconst[m [32mchar[m in[], [32mchar[m out[])
{
  [32mint[m inWord = [31m0[m;
  [32mint[m n = strlen(in);
  [33mfor[m ([32mint[m i = [31m0[m; i < n; i++) {
    [33mif[m (!inWord && isalpha(in[i])) {[10;7Hout[i] = toupper(in[i]);
    }
    [33melse[m {[13;7Hout[i] = in[i];
    }
    inWord = isalpha(in[i]);
  }
 }

[32mstatic[m [32mvoid[m
say_hello([32mconst[m [32mchar[m *name)
{
  printf([31m"Hello [m[35m%s\n[m[31m"[m, name);
}[24;63H25,0-1[8C28%[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [17;1H[24;64H4,1  [17;1H[?25h[?25l[24;53H~@k[17;1H[24;53H   [16;1H[24;64H3[16;1H[?25h[?25l[24;53H~@k[16;1H[24;53H   [15;1H[24;64H2[15;1H[?25h[?25l[24;53H~@k[15;1H[24;53H   [14;1H[24;64H1[14;1H[?25h[?25l[24;53H~@k[14;1H[24;53H   [13;1H[24;64H0[13;1H[?25h[?25l[24;53H~@k[13;1H[24;53H   [12;1H[24;63H19[12;1H[?25h[?25l[24;53H~@k[12;1H[24;53H   [11;1H[24;64H8[11;1H[?25h[?25l[24;53H~@k[11;1H[24;53H   [10;1H[24;64H7[10;1H[?25h[?25l[24;53H~@k[10;1H[24;53H   [9;1H[24;64H6[9;1H[?25h[?25l[24;53H~@k[9;1H[24;53H   [8;1H[24;64H5[8;1H[?25h[?25l[24;53H~@k[8;1H[24;53H   [7;1H[24;64H4[7;1H[?25h[?25l[24;53H~@k[7;1H[24;53H   [6;1H[24;64H3[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;1H[34m *  results into out.  The caller is responsible to ensure that out[m[6;1H[46m{[18;2H}[m[24;63H[K[24;63H12,1[10C24%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;1H[34m/** Upcase the initial letter of each word from in, copying the[m[7;1H{[19;2H}[24;63H[K[24;63H11,1[10C20%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[24;63H[K[24;63H10,1[10C16%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;1H[35m#include [m[31m<string.h>[m[24;63H[K[24;63H9,1[11C12%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;1H[35m#include [m[31m<stdlib.h>[m[24;63H[K[24;63H8,1[12C8%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;1H[35m#include [m[31m<stdio.h>[m[24;63H[K[24;63H7,1[12C4%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;1H[35m#include [m[31m<ctype.h>[m[24;63H[K[24;63H6,1[11CTop[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [5;1H[24;63H5,0-1[5;1H[?25h[?25l[24;53H~@k[5;1H[24;53H   [4;1H[24;63H4,1  [4;1H[?25h[?25l[24;53H~@k[4;1H[24;53H   [3;1H[24;63H3[3;1H[?25h[?25l[24;53H~@k[3;1H[24;53H   [2;1H[24;63H2[2;1H[?25h[?25l[24;53H~@k[2;1H[24;53H   [1;1H[24;63H1[1;1H[?25h[?25l[24;53H~@k[1;1H[24;53H   [1;1H[?25h[?25l[24;53H~@k[1;1H[24;53H   [1;1H[?25h[?25l[24;53H~@k[1;1H[24;53H   [1;1H[?25h[?25l[24;53H~@k[1;1H[24;53H   [1;1H[?25h[?25l[24;53H~@k[1;1H[24;53H   [1;1H[?25h[?25l[24;53H~@k[1;1H[24;53H   [1;1H[?25h[?25l[24;53H~@k[1;1H[24;53H   [1;1H[?25h[?25l[24;53H~@k[1;1H[24;53H   [2;1H[24;63H2[2;1H[?25h[?25l[24;53H~@k[2;1H[24;53H   [3;1H[24;63H3[3;1H[?25h[?25l[24;53H~@k[3;1H[24;53H   [4;1H[24;63H4[4;1H[?25h[?25l[24;53H~@k[4;1H[24;53H   [5;1H[24;63H5,0-1[5;1H[?25h[?25l[24;53H~@k[5;1H[24;53H   [6;1H[24;63H6,1  [6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [7;1H[24;63H7[7;1H[?25h[?25l[24;53H~@k[7;1H[24;53H   [8;1H[24;63H8[8;1H[?25h[?25l[24;53H~@k[8;1H[24;53H   [9;1H[24;63H9[9;1H[?25h[?25l[24;53H~@k[9;1H[24;53H   [10;1H[24;63H10,1[10;1H[?25h[?25l[24;53H~@k[10;1H[24;53H   [11;1H[24;64H1[11;1H[?25h[?25l[24;53H~@k[11;1H[24;53H   [12;1H[24;64H2[12;1H[?25h[?25l[24;53H~@k[12;1H[24;53H   [13;1H[24;64H3[13;1H[?25h[?25l[24;53H~@k[13;1H[24;53H   [14;1H[24;64H4[14;1H[?25h[?25l[24;53H~@k[14;1H[24;53H   [15;1H[24;64H5[15;1H[?25h[?25l[24;53H~@k[15;1H[24;53H   [16;1H[24;64H6[16;1H[?25h[?25l[24;53H~@k[16;1H[24;53H   [17;1H[24;64H7[17;1H[?25h[?25l[24;53H~@k[17;1H[24;53H   [18;1H[24;64H8[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [18;1H[1;23r[23;1H
[1;24r[23;2H}[24;63H[K[24;63H19,1[11C4%[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [18;1H[1;23r[23;1H
[1;24r[24;63H[K[24;63H20,1[11C8%[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [18;1H[1;23r[23;1H
[1;24r[23;1H[32mstatic[m [32mvoid[m[24;63H[K[24;63H21,1[10C12%[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [18;1H[1;23r[23;1H
[1;24r[23;1Hsay_hello([32mconst[m [32mchar[m *name)[24;63H[K[24;63H22,1[10C16%[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [18;1H[1;23r[23;1H
[1;24r[23;1H{[24;63H[K[24;63H23,1[10C20%[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [18;1H[1;23r[23;1H
[1;24r[23;3Hprintf([31m"Hello [m[35m%s\n[m[31m"[m, name);[24;63H[K[24;63H24,1[10C24%[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [18;1H[1;23r[23;1H
[1;24r[23;1H}[24;63H[K[24;63H25,0-1[8C28%[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [18;1H[1;23r[23;1H
[1;24r[24;63H[K[24;63H26,1[10C32%[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [18;1H[1;23r[23;1H
[1;24r[23;1H[32mint[m[24;63H[K[24;63H27,1[10C36%[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [18;1H[1;23r[23;1H
[1;24r[18;1H[46m{

}[m


main([32mint[m argc, [32mconst[m [32mchar[m *argv[])[24;63H[K[24;63H28,1[10C40%[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [18;1H[1;23r[23;1H
[1;24r[17;1H{

}[23;1H{[24;63H[K[24;63H29,1[10C44%[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [18;1H[1;23r[23;1H
[1;24r[16;1H[46m{

}[m[23;3H[33mif[m (argc == [31m1[m) {[24;63H[K[24;63H30,1[10C48%[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [18;1H[1;23r[23;1H
[1;24r[15;1H{

}[23;5Hfprintf([31mstderr[m, [31m"usage: [m[35m%s[m[31m NAME...[m[35m\n[m[31m"[m, argv[[31m0[m]);[24;63H[K[24;63H31,0-1[8C52%[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [18;1H[1;23r[23;1H
[1;24r[23;5Hexit([31m1[m);[24;63H[K[24;63H32,1[10C56%[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [18;1H[1;23r[23;1H
[1;24r[23;3H}[24;63H[K[24;63H33,1[10C60%[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [18;1H[1;23r[23;1H
[1;24r[23;3H[33melse[m {[24;63H[K[24;63H34,1[10C64%[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [18;1H[1;23r[23;1H
[1;24r[23;5H[33mfor[m ([32mint[m i = [31m1[m; i < argc; i++) {[24;63H[K[24;63H35,1[10C68%[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [18;1H[1;23r[23;1H
[1;24r[23;7H[32mconst[m [32mchar[m *name = argv[i];[24;63H[K[24;63H36,1[10C72%[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [18;1H[1;23r[23;1H
[1;24r[23;7H[32mchar[m friendlyName[strlen(name)];[24;63H[K[24;63H37,1[10C76%[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [18;1H[1;23r[23;1H
[1;24r[23;7Hupcase_words(name, friendlyName);[24;63H[K[24;63H38,1[10C80%[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [18;1H[1;23r[23;1H
[1;24r[23;7Hsay_hello(friendlyName);[24;63H[K[24;63H39,1[10C84%[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [18;1H[1;23r[23;1H
[1;24r[23;5H}[24;63H[K[24;63H40,1[10C88%[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [18;1H[1;23r[23;1H
[1;24r[23;3H}[24;63H[K[24;63H41,1[10C92%[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [18;1H[1;23r[23;1H
[1;24r[23;3H[33mreturn[m [31m0[m;[24;63H[K[24;63H42,1[10C96%[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [18;1H[1;23r[23;1H
[1;24r[23;1H}[24;63H[K[24;63H43,1[10CBot[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [19;1H[24;64H4[19;1H[?25h[?25l[24;53H~@k[19;1H[24;53H   [20;1H[24;64H5[20;1H[?25h[?25l[24;53H~@k[20;1H[24;53H   [21;1H[24;64H6[21;1H[?25h[?25l[24;53H~@k[21;1H[24;53H   [22;1H[24;64H7[22;1H[?25h[?25l[24;53H~@k[22;1H[24;53H   [23;1H[9;1H[46m{[23;1H}[m[24;64H8[23;1H[?25h[?25l[24;53H~@k[23;1H[24;53H   [23;1H[?25h[?25l[24;53H~@k[23;1H[24;53H   [23;1H[?25h[?25l[24;53H~@k[23;1H[24;53H   [23;1H[?25h[?25l[24;53H~@k[23;1H[24;53H   [23;1H[?25h[?25l[24;53H~@k[23;1H[24;53H   [23;1H[?25h[?25l[24;53H~@k[23;1H[24;53H   [23;1H[?25h[?25l[24;53H~@k[23;1H[24;53H   [23;1H[?25h[?25l[24;53H~@k[23;1H[24;53H   [23;1H[?25h[?25l[24;53H~@k[23;1H[24;53H   [23;1H[?25h[?25l[24;53H~@k[23;1H[24;53H   [23;1H[?25h[?25l[24;53H~@k[23;1H[24;53H   [23;1H[?25h[?25l[24;53H~@k[23;1H[24;53H   [23;1H[?25h[?25l[24;53H~@k[23;1H[24;53H   [23;1H[?25h[?25l[24;53H~@k[23;1H[24;53H   [23;1H[?25h[?25l[24;53H~@k[23;1H[24;53H   [22;1H[9;1H{[23;1H}[24;64H7[22;1H[?25h[?25l[24;53H~@k[22;1H[24;53H   [21;1H[24;64H6[21;1H[?25h[?25l[24;53H~@k[21;1H[24;53H   [20;1H[24;64H5[20;1H[?25h[?25l[24;53H~@k[20;1H[24;53H   [19;1H[24;64H4[19;1H[?25h[?25l[24;53H~@k[19;1H[24;53H   [18;1H[24;64H3[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [17;1H[24;64H2[17;1H[?25h[?25l[24;53H~@k[17;1H[24;53H   [16;1H[24;64H1[16;1H[?25h[?25l[24;53H~@k[16;1H[24;53H   [15;1H[24;64H0[15;1H[?25h[?25l[24;53H~@k[15;1H[24;53H   [14;1H[24;63H39[14;1H[?25h[?25l[24;53H~@k[14;1H[24;53H   [13;1H[24;64H8[13;1H[?25h[?25l[24;53H~@k[13;1H[24;53H   [12;1H[24;64H7[12;1H[?25h[?25l[24;53H~@k[12;1H[24;53H   [11;1H[24;64H6[11;1H[?25h[?25l[24;53H~@k[11;1H[24;53H   [10;1H[24;64H5[10;1H[?25h[?25l[24;53H~@k[10;1H[24;53H   [9;1H[46m{[23;1H}[m[24;64H4[9;1H[?25h[?25l[24;53H~@k[9;1H[24;53H   [8;1H
{[23;1H}[24;64H3[8;1H[?25h[?25l[24;53H~@k[8;1H[24;53H   [7;1H[24;64H2[7;1H[?25h[?25l[24;53H~@k[7;1H[24;53H   [6;1H[24;64H1,0-1[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[4;1H[46m{

}[m[24;63H[K[24;63H30,1[10C96%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;2H}[5;1H{

}[24;63H[K[24;63H29,1[10C92%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;3H}[6;1H[46m{

}[m[24;63H[K[24;63H28,1[10C88%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;5HinWord = isalpha(in[i]);[7;1H{

}[24;63H[K[24;63H27,1[10C84%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;5H}[24;63H[K[24;63H26,1[10C80%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;7Hout[i] = in[i];[24;63H[K[24;63H25,0-1[8C76%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;5H[33melse[m {[24;63H[K[24;63H24,1[10C72%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;5H}[24;63H[K[24;63H23,1[10C68%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;7Hout[i] = toupper(in[i]);[24;63H[K[24;63H22,1[10C64%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;5H[33mif[m (!inWord && isalpha(in[i])) {[24;63H[K[24;63H21,1[10C60%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;3H[33mfor[m ([32mint[m i = [31m0[m; i < n; i++) {[24;63H[K[24;63H20,1[10C56%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;3H[32mint[m n = strlen(in);[24;63H[K[24;63H19,1[10C52%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;3H[32mint[m inWord = [31m0[m;[24;63H[K[24;63H18,1[10C48%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;1H{[24;63H[K[24;63H17,1[10C44%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;1Hupcase_words([32mconst[m [32mchar[m in[], [32mchar[m out[])[24;63H[K[24;63H16,1[10C40%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;1H[32mvoid[m[24;63H[K[24;63H15,1[10C36%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;1H[34m */[m[24;63H[K[24;63H14,1[10C32%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;1H[34m *  has enough space for the strlen(in) characters of in.[m[24;63H[K[24;63H13,1[10C28%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;1H[34m *  results into out.  The caller is responsible to ensure that out[m[6;1H[46m{[18;2H}[m[24;63H[K[24;63H12,1[10C24%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;1H[34m/** Upcase the initial letter of each word from in, copying the[m[7;1H{[19;2H}[24;63H[K[24;63H11,1[10C20%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[24;63H[K[24;63H10,1[10C16%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;1H[35m#include [m[31m<string.h>[m[24;63H[K[24;63H9,1[11C12%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;1H[35m#include [m[31m<stdlib.h>[m[24;63H[K[24;63H8,1[12C8%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;1H[35m#include [m[31m<stdio.h>[m[24;63H[K[24;63H7,1[12C4%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;1H[35m#include [m[31m<ctype.h>[m[24;63H[K[24;63H6,1[11CTop[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [5;1H[24;63H5,0-1[5;1H[?25h[?25l[24;53H~@k[5;1H[24;53H   [4;1H[24;63H4,1  [4;1H[?25h[?25l[24;53H~@k[4;1H[24;53H   [3;1H[24;63H3[3;1H[?25h[?25l[24;53H~@k[3;1H[24;53H   [2;1H[24;63H2[2;1H[?25h[?25l[24;53H~@k[2;1H[24;53H   [1;1H[24;63H1[1;1H[?25h[?25l[24;53H~@k[1;1H[24;53H   [1;1H[?25h[?25l[24;53H~@k[1;1H[24;53H   [1;1H[?25h[?25l[24;53H~@k[1;1H[24;53H   [1;1H[?25h[?25l[24;53H~@k[1;1H[24;53H   [1;1H[?25h[?25l[24;53H~@k[1;1H[24;53H   [1;1H[?25h[?25l[24;53H~@k[1;1H[24;53H   [1;1H[?25h[?25l[24;53H:[1;1H[24;53H[K[24;1H:[?2004h[?25hq[?25l[?25h[?25l[24;2H[K[24;2H[?25h![?25l[?25hq[?25l[?25h[?25l:!q[?2004l[?1l>[?25h[?1049l[23;0;0t
[No write since last change]
[?1002l[?2004l/bin/bash: q: command not found
[?1002h[?2004h
shell returned 127

Press ENTER or type command to continue[?1002l[?1002h[?1049h[22;0;0t[?1h=[?2004h[?25l[1;1H[27m[23m[29m[m[H[2J[1;1H[35m#include [m[31m<ctype.h>[m
[35m#include [m[31m<stdio.h>[m
[35m#include [m[31m<stdlib.h>[m
[35m#include [m[31m<string.h>[m

[34m/** Upcase the initial letter of each word from in, copying the
 *  results into out.  The caller is responsible to ensure that out
 *  has enough space for the strlen(in) characters of in.
 */[m
[32mvoid[m
upcase_words([32mconst[m [32mchar[m in[], [32mchar[m out[])
{
  [32mint[m inWord = [31m0[m;
  [32mint[m n = strlen(in);
  [33mfor[m ([32mint[m i = [31m0[m; i < n; i++) {
    [33mif[m (!inWord && isalpha(in[i])) {[17;7Hout[i] = toupper(in[i]);
    }
    [33melse[m {[20;7Hout[i] = in[i];
    }
    inWord = isalpha(in[i]);
  }[24;63H1,1[11CTop[1;1H[?25h[?25l[24;53Hq[1;1H[?25h[?25l[24;54H^M[1;1H[24;53H   [1;1H[?25h[?25l[1;23r[1;1H[4M[1;24r[18;21H[46m([min[i][46m)[m

 }

[32mstatic[m [32mvoid[m
say_hello([32mconst[m [32mchar[m *name)[24;63H[K[24;63H22,21[9C16%[18;21H[?25h[?25l[24;53H:[18;21H[24;53H[K[24;1H:[?2004h[?25hq[?25l[?25h![?25l[?25h[?25l[?1002l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[?2004l[?1l>[?25h[?1049l[23;0;0t
psammon1@remote00:~/cs220/labs/lab2/exercises/2-hello-upcase-args$ vim hello.c
[?1000h[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;24r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[24;1H"hello.c" 48L, 962C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[2;1H[34m/** Upcase the initial letter of each word from in, copying the
 *  results into out.  The caller is responsible to ensure that out
 *  has enough space for the strlen(in) characters of in.
 */[m
[32mvoid[m
upcase_words([32mconst[m [32mchar[m in[], [32mchar[m out[])
{
  [32mint[m inWord = [31m0[m;
  [32mint[m n = strlen(in);
  [33mfor[m ([32mint[m i = [31m0[m; i < n; i++) {
    [33mif[m (!inWord && isalpha(in[i])) {[13;7Hout[i] = toupper(in[i]);
    }
    [33melse[m {[16;7Hout[i] = in[i];
    }
    inWord = isalpha[46m([min[i][46m)[m;
  }
}

[32mstatic[m [32mvoid[m
say_hello([32mconst[m [32mchar[m *name)[24;63H22,21[9C16%[18;21H[?25h[?1000l[?1002h[?25l[24;53H~@k[18;21H[24;53H   [18;3H[1;23r[23;1H
[1;24r[10;31H[46m{[m[17;21H(in[i])
  [46m}[m[23;1H{[24;1H[K[24;63H23,3[10C20%[18;3H[?25h[?25l[24;53H~@k[18;3H[24;53H   [18;1H[1;23r[23;1H
[1;24r[6;1H[46m{[m[9;31H{[17;3H}
[46m}[m[23;3Hprintf([31m"Hello [m[35m%s\n[m[31m"[m, name);[24;63H[K[24;63H24,1[10C24%[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [18;1H[1;23r[23;1H
[1;24r[5;1H{[17;1H}[23;1H}[24;63H[K[24;63H25,0-1[8C28%[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [18;11H[1;23r[23;1H
[1;24r[24;63H[K[24;63H26,11[9C32%[18;11H[?25h[?25l[24;53H~@k[18;11H[24;53H   [18;21H[1;23r[23;1H
[1;24r[23;1H[32mint[m[24;63H[K[24;63H27,21[9C36%[18;21H[?25h[?25l[24;53H~@k[18;21H[24;53H   [17;11H[24;64H6,1[17;11H[?25h[?25l[24;53H~@k[17;11H[24;53H   [16;1H[24;64H5,0-1[16;1H[?25h[?25l[24;53H~@k[16;1H[24;53H   [15;1H[3;1H[46m{[15;1H}[m[24;64H4,1  [15;1H[?25h[?25l[24;53H~@k[15;1H[24;53H   [14;3H[3;1H{[6;31H[46m{[14;3H}[m
}[24;64H3,3[14;3H[?25h[?25l[24;53H~@k[14;3H[24;53H   [13;21H[6;31H{[13;21H[46m([min[i][46m)[m
  }[24;64H2,21[13;21H[?25h[?25l[24;53H~@k[13;21H[24;53H   [12;5H[10;10H[46m{[12;5H}[m[13;21H(in[i])[24;64H1,5 [12;5H[?25h[?25l[24;53H~@k[12;5H[24;53H   [11;21H[10;10H{[12;5H}[24;64H0,21[11;21H[?25h[?25l[6;31H[46m{[14;3H}[m[24;64H3,3 [14;3H[?25h[?25l[24;53H~@k[14;3H[24;53H   [15;1H[3;1H[46m{[m[6;31H{[14;3H}
[46m}[m[24;64H4,1[15;1H[?25h[?25l[24;53H~@k[15;1H[24;53H   [16;1H[3;1H{[15;1H}[24;64H5,0-1[16;1H[?25h[?25l[24;53H~@k[16;1H[24;53H   [17;11H[24;64H6,11 [17;11H[?25h[?25l[24;53H~@k[17;11H[24;53H   [18;23H[24;64H7,23[18;23H[?25h[?25l[24;53H~@k[18;23H[24;53H   [18;1H[1;23r[23;1H
[1;24r[18;1H[46m{

}[m


main([32mint[m argc, [32mconst[m [32mchar[m *argv[])[24;63H[K[24;63H28,1[10C40%[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [18;23H[1;23r[23;1H
[1;24r[17;1H{

}[23;1H{[24;63H[K[24;63H29,23[9C44%[18;23H[?25h[?25l[24;53H~@k[18;23H[24;53H   [18;1H[1;23r[23;1H
[1;24r[16;1H[46m{

}[m[23;3H[33mif[m (argc == [31m1[m) {[24;63H[K[24;63H30,1[10C48%[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [18;1H[1;23r[23;1H
[1;24r[15;1H{

}[23;5Hfprintf([31mstderr[m, [31m"usage: [m[35m%s[m[31m NAME...[m[35m\n[m[31m"[m, argv[[31m0[m]);[24;63H[K[24;63H31,0-1[8C52%[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [18;3H[1;23r[23;1H
[1;24r[23;5Hexit([31m1[m);[24;63H[K[24;63H32,3[10C56%[18;3H[?25h[?25l[24;53H~@k[18;3H[24;53H   [18;23H[1;23r[23;1H
[1;24r[23;3H}[24;63H[K[24;63H33,23[9C60%[18;23H[?25h[?25l[24;53H~@k[18;23H[24;53H   [18;1H[1;23r[23;1H
[1;24r[23;3H[33melse[m {[24;63H[K[24;63H34,1[10C64%[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [18;18H[1;23r[23;1H
[1;24r[18;18H[46m{[21;3H}[m[23;5H[33mfor[m ([32mint[m i = [31m1[m; i < argc; i++) {[24;63H[K[24;63H35,18[9C68%[18;18H[?25h[?25l[24;53H~@k[18;18H[24;53H   [17;1H[18;18H{[21;3H}[24;64H4,1 [17;1H[?25h[?25l[24;53H~@k[17;1H[24;53H   [16;23H[24;64H3,23[16;23H[?25h[?25l[24;53H~@k[16;23H[24;53H   [15;3H[24;64H2,3 [15;3H[?25h[?25l[1;23r[1;1H[17L[1;24r[1;1H[35m#include [m[31m<ctype.h>[m
[35m#include [m[31m<stdio.h>[m
[35m#include [m[31m<stdlib.h>[m
[35m#include [m[31m<string.h>[m

[34m/** Upcase the initial letter of each word from in, copying the
 *  results into out.  The caller is responsible to ensure that out
 *  has enough space for the strlen(in) characters of in.
 */[m
[32mvoid[m
upcase_words([32mconst[m [32mchar[m in[], [32mchar[m out[])
{
  [32mint[m inWord = [31m0[m;
  [32mint[m n = strlen(in);
  [33mfor[m ([32mint[m i = [31m0[m; i < n; i++) {
    [33mif[m (!inWord && isalpha(in[i])) [46m{[m[17;7Hout[i] = toupper(in[i]);
    [46m}[m[24;63H[K[24;63H18,5[10CTop[18;5H[?25h[?25l[1;23r[1;1H[3M[1;24r[21;1H}

[32mstatic[m [32mvoid[m[24;63H[K[24;63H18,5[10C12%[15;5H[?25h[?25l[1;23r[1;1H[3M[1;24r[21;1Hsay_hello([32mconst[m [32mchar[m *name)
{
  printf([31m"Hello [m[35m%s\n[m[31m"[m, name);[24;63H[K[24;63H18,5[10C24%[12;5H[?25h[?25l[1;23r[1;1H[3M[1;24r[21;1H}

[32mint[m[24;63H[K[24;63H18,5[10C36%[9;5H[?25h[?25l[1;23r[1;1H[3M[1;24r[21;1Hmain([32mint[m argc, [32mconst[m [32mchar[m *argv[])
{
  [33mif[m (argc == [31m1[m) {[24;63H[K[24;63H18,5[10C48%[6;5H[?25h[?25l[1;23r[1;1H[3M[1;24r[1;36H{[3;5H}[4;10H[46m{[6;5H}[m[21;5Hfprintf([31mstderr[m, [31m"usage: [m[35m%s[m[31m NAME...[m[35m\n[m[31m"[m, argv[[31m0[m]);
    exit([31m1[m);
  }[24;63H[K[24;63H21,5[10C60%[6;5H[?25h[?25l[1;23r[1;1H[3M[1;24r[1;10H{[3;5H}[21;3H[33melse[m {
    [33mfor[m ([32mint[m i = [31m1[m; i < argc; i++) {[23;7H[32mconst[m [32mchar[m *name = argv[i];[24;63H[K[24;63H24,1[10C72%[6;1H[?25h[?25l[1;23r[1;1H[3M[1;24r[21;7H[32mchar[m friendlyName[strlen(name)];[22;7Hupcase_words(name, friendlyName);[23;7Hsay_hello(friendlyName);[24;63H[K[24;63H27,5[10C84%[6;5H[?25h[?25l[1;23r[1;1H[3M[1;24r[4;1H[46m{

}[m[21;5H}
  }
  [33mreturn[m [31m0[m;[24;63H[K[24;63H30,1[10C96%[6;1H[?25h[?25l[1;23r[1;1H[3M[1;24r[1;1H{

}[6;5H[46m([28C)[m[21;1H}
[1m[34m~                                                                               [23;1H~                                                                               [m[24;63H[K[24;63H33,5[10CBot[6;5H[?25h[?25l[1;23r[1;1H[3M[1;24r[3;5H([28C)[21;1H[1m[34m~                                                                               [22;1H~                                                                               [23;1H~                                                                               [m[24;63H[K[24;63H36,5[10CBot[6;5H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;1H{
  printf([31m"Hello [m[35m%s\n[m[31m"[m, name);
}[24;63H[K[24;63H36,5[10CBot[9;5H[?25h[?25l[13;36H[46m{[18;5H}[m[24;63H45[18;5H[?25h[?25l[1;23r[1;1H[3L[1;24r[2;1H[32mstatic[m [32mvoid[m
say_hello([32mconst[m [32mchar[m *name)[16;36H{[21;5H}[24;63H[K[24;63H42,26[9C96%[18;26H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;5HinWord = isalpha(in[i]);
  }
}[24;63H[K[24;63H39,8[10C84%[18;8H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;5H[33melse[m {[2;7Hout[i] = in[i];
    }[24;63H[K[24;63H36,26[9C72%[18;26H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;5H[33mif[m (!inWord && isalpha(in[i])) {[2;7Hout[i] = toupper(in[i]);
    }[24;63H[K[24;63H33,26[9C60%[18;26H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;3H[32mint[m inWord = [31m0[m;
  [32mint[m n = strlen(in);
  [33mfor[m ([32mint[m i = [31m0[m; i < n; i++) {[16;1H[46m{

}[m[24;63H[K[24;63H30,1[10C48%[18;1H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;1H[32mvoid[m
upcase_words([32mconst[m [32mchar[m in[], [32mchar[m out[])
{[19;1H{

}[24;63H[K[24;63H27,26[9C36%[18;26H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;1H[34m *  results into out.  The caller is responsible to ensure that out
 *  has enough space for the strlen(in) characters of in.
 */[m


[46m{[18;1H}[m[24;63H[K[24;63H24,1[10C24%[18;1H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;1H[35m#include [m[31m<string.h>[m

[34m/** Upcase the initial letter of each word from in, copying the[m[9;1H{[16;10H[46m{[18;5H}[m


}[24;63H[K[24;63H21,5[10C12%[18;5H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;1H[35m#include [m[31m<ctype.h>[m
[35m#include [m[31m<stdio.h>[m
[35m#include [m[31m<stdlib.h>[m[16;36H[46m{[18;5H}[m[19;10H{[21;5H}[24;63H[K[24;63H18,5[10CTop[18;5H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[1;23r[1;1H[3M[1;24r[21;1H}

[32mstatic[m [32mvoid[m[24;63H[K[24;63H18,5[10C12%[15;5H[?25h[?25l[1;23r[1;1H[3M[1;24r[21;1Hsay_hello([32mconst[m [32mchar[m *name)
{
  printf([31m"Hello [m[35m%s\n[m[31m"[m, name);[24;63H[K[24;63H18,5[10C24%[12;5H[?25h[?25l[1;23r[1;1H[3M[1;24r[21;1H}

[32mint[m[24;63H[K[24;63H18,5[10C36%[9;5H[?25h[?25l[1;23r[1;1H[3M[1;24r[21;1Hmain([32mint[m argc, [32mconst[m [32mchar[m *argv[])
{
  [33mif[m (argc == [31m1[m) {[24;63H[K[24;63H18,5[10C48%[6;5H[?25h[?25l[1;23r[1;1H[3M[1;24r[1;36H{[3;5H}[4;10H[46m{[6;5H}[m[21;5Hfprintf([31mstderr[m, [31m"usage: [m[35m%s[m[31m NAME...[m[35m\n[m[31m"[m, argv[[31m0[m]);
    exit([31m1[m);
  }[24;63H[K[24;63H21,5[10C60%[6;5H[?25h[?25l[1;23r[1;1H[3M[1;24r[1;10H{[3;5H}[21;3H[33melse[m {
    [33mfor[m ([32mint[m i = [31m1[m; i < argc; i++) {[23;7H[32mconst[m [32mchar[m *name = argv[i];[24;63H[K[24;63H24,1[10C72%[6;1H[?25h[?25l[1;23r[1;1H[3M[1;24r[21;7H[32mchar[m friendlyName[strlen(name)];[22;7Hupcase_words(name, friendlyName);[23;7Hsay_hello(friendlyName);[24;63H[K[24;63H27,26[9C84%[6;26H[?25h[?25l[1;23r[1;1H[3M[1;24r[4;1H[46m{

}[m[21;5H}
  }
  [33mreturn[m [31m0[m;[24;63H[K[24;63H30,1[10C96%[6;1H[?25h[?25l[1;23r[1;1H[3M[1;24r[1;1H{

}[21;1H}
[1m[34m~                                                                               [23;1H~                                                                               [m[24;63H[K[24;63H33,26[9CBot[6;26H[?25h[?25l[1;23r[1;1H[3M[1;24r[21;1H[1m[34m~                                                                               [22;1H~                                                                               [23;1H~                                                                               [m[24;63H[K[24;63H36,26[9CBot[6;26H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;1H{
  printf([31m"Hello [m[35m%s\n[m[31m"[m, name);
}[24;63H[K[24;63H36,26[9CBot[9;26H[?25h[?25l[1;23r[1;1H[3L[1;24r[2;1H[32mstatic[m [32mvoid[m
say_hello([32mconst[m [32mchar[m *name)[24;63H[K[24;63H36,26[9C96%[12;26H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;5HinWord = isalpha(in[i]);
  }
}[24;63H[K[24;63H36,26[9C84%[15;26H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;5H[33melse[m {[2;7Hout[i] = in[i];
    }[24;63H[K[24;63H36,26[9C72%[18;26H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;5H[33mif[m (!inWord && isalpha(in[i])) {[2;7Hout[i] = toupper(in[i]);
    }[24;63H[K[24;63H33,26[9C60%[18;26H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;3H[32mint[m inWord = [31m0[m;
  [32mint[m n = strlen(in);
  [33mfor[m ([32mint[m i = [31m0[m; i < n; i++) {[16;1H[46m{

}[m[24;63H[K[24;63H30,1[10C48%[18;1H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;1H[32mvoid[m
upcase_words([32mconst[m [32mchar[m in[], [32mchar[m out[])
{[19;1H{

}[24;63H[K[24;63H27,26[9C36%[18;26H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;1H[34m *  results into out.  The caller is responsible to ensure that out
 *  has enough space for the strlen(in) characters of in.
 */[m


[46m{[18;1H}[m[24;63H[K[24;63H24,1[10C24%[18;1H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;1H[35m#include [m[31m<string.h>[m

[34m/** Upcase the initial letter of each word from in, copying the[m[9;1H{[16;10H[46m{[18;5H}[m


}[24;63H[K[24;63H21,5[10C12%[18;5H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;1H[35m#include [m[31m<ctype.h>[m
[35m#include [m[31m<stdio.h>[m
[35m#include [m[31m<stdlib.h>[m[16;36H[46m{[18;5H}[m[19;10H{[21;5H}[24;63H[K[24;63H18,5[10CTop[18;5H[?25h[?25l[?25h[?25l[?25h[?25l[1;23r[1;1H[3M[1;24r[21;1H}

[32mstatic[m [32mvoid[m[24;63H[K[24;63H18,5[10C12%[15;5H[?25h[?25l[1;23r[1;1H[3M[1;24r[21;1Hsay_hello([32mconst[m [32mchar[m *name)
{
  printf([31m"Hello [m[35m%s\n[m[31m"[m, name);[24;63H[K[24;63H18,5[10C24%[12;5H[?25h[?25l[1;23r[1;1H[3M[1;24r[21;1H}

[32mint[m[24;63H[K[24;63H18,5[10C36%[9;5H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;1H[34m *  results into out.  The caller is responsible to ensure that out
 *  has enough space for the strlen(in) characters of in.
 */[m[24;63H[K[24;63H18,5[10C24%[12;5H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;1H[35m#include [m[31m<string.h>[m

[34m/** Upcase the initial letter of each word from in, copying the[m[24;63H[K[24;63H18,5[10C12%[15;5H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;1H[35m#include [m[31m<ctype.h>[m
[35m#include [m[31m<stdio.h>[m
[35m#include [m[31m<stdlib.h>[m[24;63H[K[24;63H18,5[10CTop[18;5H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[1;23r[1;1H[3M[1;24r[21;1H}

[32mstatic[m [32mvoid[m[24;63H[K[24;63H18,5[10C12%[15;5H[?25h[?25l[1;23r[1;1H[3M[1;24r[21;1Hsay_hello([32mconst[m [32mchar[m *name)
{
  printf([31m"Hello [m[35m%s\n[m[31m"[m, name);[24;63H[K[24;63H18,5[10C24%[12;5H[?25h[?25l[1;23r[1;1H[3M[1;24r[21;1H}

[32mint[m[24;63H[K[24;63H18,5[10C36%[9;5H[?25h[?25l[1;23r[1;1H[3M[1;24r[21;1Hmain([32mint[m argc, [32mconst[m [32mchar[m *argv[])
{
  [33mif[m (argc == [31m1[m) {[24;63H[K[24;63H18,5[10C48%[6;5H[?25h[?25l[1;23r[1;1H[3M[1;24r[1;36H{[3;5H}[4;10H[46m{[6;5H}[m[21;5Hfprintf([31mstderr[m, [31m"usage: [m[35m%s[m[31m NAME...[m[35m\n[m[31m"[m, argv[[31m0[m]);
    exit([31m1[m);
  }[24;63H[K[24;63H21,5[10C60%[6;5H[?25h[?25l[1;23r[1;1H[3M[1;24r[1;10H{[3;5H}[21;3H[33melse[m {
    [33mfor[m ([32mint[m i = [31m1[m; i < argc; i++) {[23;7H[32mconst[m [32mchar[m *name = argv[i];[24;63H[K[24;63H24,1[10C72%[6;1H[?25h[?25l[1;23r[1;1H[3M[1;24r[21;7H[32mchar[m friendlyName[strlen(name)];[22;7Hupcase_words(name, friendlyName);[23;7Hsay_hello(friendlyName);[24;63H[K[24;63H27,26[9C84%[6;26H[?25h[?25l[1;23r[1;1H[3M[1;24r[4;1H[46m{

}[m[21;5H}
  }
  [33mreturn[m [31m0[m;[24;63H[K[24;63H30,1[10C96%[6;1H[?25h[?25l[1;23r[1;1H[3M[1;24r[1;1H{

}[21;1H}
[1m[34m~                                                                               [23;1H~                                                                               [m[24;63H[K[24;63H33,26[9CBot[6;26H[?25h[?25l[1;23r[1;1H[3M[1;24r[21;1H[1m[34m~                                                                               [22;1H~                                                                               [23;1H~                                                                               [m[24;63H[K[24;63H36,26[9CBot[6;26H[?25h[?25l[1;23r[1;1H[3M[1;24r[6;8H[46m{[13;3H}[m[21;1H[1m[34m~                                                                               [22;1H~                                                                               [23;1H~                                                                               [m[24;63H[K[24;63H39,8[10CBot[6;8H[?25h[?25l[1;23r[1;1H[3M[1;24r[3;8H{[10;3H}[21;1H[1m[34m~                                                                               [22;1H~                                                                               [23;1H~                                                                               [m[24;63H[K[24;63H42,26[9CBot[6;26H[?25h[?25l[1;23r[1;1H[3M[1;24r[1;36H[46m{[6;5H}[m[21;1H[1m[34m~                                                                               [22;1H~                                                                               [23;1H~                                                                               [m[24;63H[K[24;63H45,5[10CBot[6;5H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;5Hexit([31m1[m);
  }
  [33melse[m {[24;63H[K[24;63H45,5[10CBot[9;5H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;1H{
  [33mif[m (argc == [31m1[m) {
    fprintf([31mstderr[m, [31m"usage: [m[35m%s[m[31m NAME...[m[35m\n[m[31m"[m, argv[[31m0[m]);[24;63H[K[24;63H45,5[10CBot[12;5H[?25h[?25l[1;23r[1;1H[3L[1;24r[2;1H[32mint[m
main([32mint[m argc, [32mconst[m [32mchar[m *argv[])[24;63H[K[24;63H45,5[10CBot[15;5H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;1H{
  printf([31m"Hello [m[35m%s\n[m[31m"[m, name);
}[24;63H[K[24;63H45,5[10CBot[18;5H[?25h[?25l[1;23r[1;1H[3L[1;24r[2;1H[32mstatic[m [32mvoid[m
say_hello([32mconst[m [32mchar[m *name)[16;36H{[21;5H}[24;63H[K[24;63H42,26[9C96%[18;26H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;5HinWord = isalpha(in[i]);
  }
}[24;63H[K[24;63H39,8[10C84%[18;8H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;5H[33melse[m {[2;7Hout[i] = in[i];
    }[24;63H[K[24;63H36,26[9C72%[18;26H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;5H[33mif[m (!inWord && isalpha(in[i])) {[2;7Hout[i] = toupper(in[i]);
    }[24;63H[K[24;63H33,26[9C60%[18;26H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;3H[32mint[m inWord = [31m0[m;
  [32mint[m n = strlen(in);
  [33mfor[m ([32mint[m i = [31m0[m; i < n; i++) {[16;1H[46m{

}[m[24;63H[K[24;63H30,1[10C48%[18;1H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;1H[32mvoid[m
upcase_words([32mconst[m [32mchar[m in[], [32mchar[m out[])
{[19;1H{

}[24;63H[K[24;63H27,26[9C36%[18;26H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;1H[34m *  results into out.  The caller is responsible to ensure that out
 *  has enough space for the strlen(in) characters of in.
 */[m


[46m{[18;1H}[m[24;63H[K[24;63H24,1[10C24%[18;1H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;1H[35m#include [m[31m<string.h>[m

[34m/** Upcase the initial letter of each word from in, copying the[m[9;1H{[16;10H[46m{[18;5H}[m


}[24;63H[K[24;63H21,5[10C12%[18;5H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;1H[35m#include [m[31m<ctype.h>[m
[35m#include [m[31m<stdio.h>[m
[35m#include [m[31m<stdlib.h>[m[16;36H[46m{[18;5H}[m[19;10H{[21;5H}[24;63H[K[24;63H18,5[10CTop[18;5H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[1;23r[1;1H[3M[1;24r[21;1H}

[32mstatic[m [32mvoid[m[24;63H[K[24;63H18,5[10C12%[15;5H[?25h[?25l[1;23r[1;1H[3M[1;24r[21;1Hsay_hello([32mconst[m [32mchar[m *name)
{
  printf([31m"Hello [m[35m%s\n[m[31m"[m, name);[24;63H[K[24;63H18,5[10C24%[12;5H[?25h[?25l[1;23r[1;1H[3M[1;24r[21;1H}

[32mint[m[24;63H[K[24;63H18,5[10C36%[9;5H[?25h[?25l[1;23r[1;1H[3M[1;24r[21;1Hmain([32mint[m argc, [32mconst[m [32mchar[m *argv[])
{
  [33mif[m (argc == [31m1[m) {[24;63H[K[24;63H18,5[10C48%[6;5H[?25h[?25l[1;23r[1;1H[3M[1;24r[1;36H{[3;5H}[4;10H[46m{[6;5H}[m[21;5Hfprintf([31mstderr[m, [31m"usage: [m[35m%s[m[31m NAME...[m[35m\n[m[31m"[m, argv[[31m0[m]);
    exit([31m1[m);
  }[24;63H[K[24;63H21,5[10C60%[6;5H[?25h[?25l[1;23r[1;1H[3M[1;24r[1;10H{[3;5H}[21;3H[33melse[m {
    [33mfor[m ([32mint[m i = [31m1[m; i < argc; i++) {[23;7H[32mconst[m [32mchar[m *name = argv[i];[24;63H[K[24;63H24,1[10C72%[6;1H[?25h[?25l[1;23r[1;1H[3M[1;24r[21;7H[32mchar[m friendlyName[strlen(name)];[22;7Hupcase_words(name, friendlyName);[23;7Hsay_hello(friendlyName);[24;63H[K[24;63H27,26[9C84%[6;26H[?25h[?25l[1;23r[1;1H[3M[1;24r[4;1H[46m{

}[m[21;5H}
  }
  [33mreturn[m [31m0[m;[24;63H[K[24;63H30,1[10C96%[6;1H[?25h[?25l[1;23r[1;1H[3M[1;24r[1;1H{

}[21;1H}
[1m[34m~                                                                               [23;1H~                                                                               [m[24;63H[K[24;63H33,26[9CBot[6;26H[?25h[?25l[1;23r[1;1H[3L[1;24r[2;1H[32mstatic[m [32mvoid[m
say_hello([32mconst[m [32mchar[m *name)[24;63H[K[24;63H33,26[9C96%[9;26H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;5HinWord = isalpha(in[i]);
  }
}[24;63H[K[24;63H33,26[9C84%[12;26H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;5H[33melse[m {[2;7Hout[i] = in[i];
    }[24;63H[K[24;63H33,26[9C72%[15;26H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;5H[33mif[m (!inWord && isalpha(in[i])) {[2;7Hout[i] = toupper(in[i]);
    }[24;63H[K[24;63H33,26[9C60%[18;26H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;3H[32mint[m inWord = [31m0[m;
  [32mint[m n = strlen(in);
  [33mfor[m ([32mint[m i = [31m0[m; i < n; i++) {[16;1H[46m{

}[m[24;63H[K[24;63H30,1[10C48%[18;1H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;1H[32mvoid[m
upcase_words([32mconst[m [32mchar[m in[], [32mchar[m out[])
{[19;1H{

}[24;63H[K[24;63H27,26[9C36%[18;26H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;1H[34m *  results into out.  The caller is responsible to ensure that out
 *  has enough space for the strlen(in) characters of in.
 */[m


[46m{[18;1H}[m[24;63H[K[24;63H24,1[10C24%[18;1H[?25h[?25l[6;1H{[18;1H}[24;63H14,16[8;16H[?25h[?25l[24;53H6[8;16H[7mstrle[m[24;1H[1m-- VISUAL --[m[24;53H[K[24;53H6[8;16H[24;63H14,16[9C24%[8;16H[?25h[?25l[?25h[?25l[24;53H [6;2H[1;23r[1;1H[L[1;24r[1;1H[34m/** Upcase the initial letter of each word from in, copying the[m[9;11Hstrle[24;1H[K[24;63H11,2[10C20%[6;2H[?25h[?25l[24;53H3[4;2H[1C[7m[34m/[m[7m [m
[7m[32mvoid[m[7m 
up[m[24;1H[1m-- VISUAL --[m[24;53H[K[24;53H3[4;2H[24;63H9,2[11C20%[4;2H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[24;53H2[5;2H[4;3H[34m/[m[4;4H[K[5;1H[32mvo[m[24;63H10,2[5;2H[?25h[?25l[?25h[?25l[1C[32mi[m[24;66H3[5;3H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[1C[32md[m[24;66H4[5;4H[?25h[?25l[24;53H4[6;5H[5;5H[K[6;1Hu[1C[7mca[m[24;64H1,5[6;5H[?25h[?25l[24;53H5[6;6H[7ms[m[24;66H6[6;6H[?25h[?25l[24;53H2[7;2H[6;6H[7me_words([m[7m[32mconst[m[7m [m[7m[32mchar[m[7m in[], [m[7m[32mchar[m[7m out[]) 
{[m[24;64H2,2[7;2H[?25h[?25l[?25h[?25l[24;53H3[8;9H[7;2H[7m 
  [m[7m[32mint[m[7m in[m[24;64H3,9[8;9H[?25h[?25lW[7mW[m[24;66H10[8;10H[?25h[?25lor[7mor[m[24;67H2[8;12H[?25h[?25l[24;53H4[9;13H[8;12H[7md = [m[7m[31m0[m[7m; 
  [m[7m[32mint[m[7m n = st[m[24;64H4,13[9;13H[?25h[?25lr[7mr[m[24;67H4[9;14H[?25h[?25l[24;53H5[10;14H[9;14H[7mlen(in); 
  [m[7m[33mfor[m[7m ([m[7m[32mint[m[7m i [m[24;64H5[10;14H[?25h[?25l=[7m=[m[24;67H5[10;15H[?25h[?25l [7m [m[24;67H6[10;16H[?25h[?25l[?25h[?25l[?25h[?25l[24;53H6[11;17H[10;16H[7m[31m0[m[7m; i < n; i++) { 
    [m[7m[33mif[m[7m (!inWord [m[24;64H6,17[11;17H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l&[7m&[m[24;67H8[11;18H[?25h[?25l[?25h[?25l[?25h[?25l[24;53H7[12;18H[11;18H[7m& isalpha(in[i])) { 
      out[i] = to[m[24;64H7[12;18H[?25h[?25l[?25h[?25lu[7mu[m[24;67H9[12;19H[?25h[?25l[24;53H8[13;6H[12;19H[7mpper(in[i]); 
    }[m[24;64H8,6 [13;6H[?25h[?25l[?25h[?25l[?25h[?25l[24;53H9[14;11H[13;6H[7m 
    [m[7m[33melse[m[7m {[m[24;64H9,11[14;11H[?25h[?25l[?25h[?25l[24;53H10[15;22H[14;11H[7m 
      out[i] = in[i];[m[24;63H20,22[15;22H[?25h[?25l[?25h[?25l[24;54H1[16;6H[15;22H[7m 
    }[m[24;64H1,6 [16;6H[?25h[?25l[?25h[?25l[24;54H2[17;24H[16;6H[7m 
    inWord = isalpha(in[m[46m[[mi[46m][m[24;64H2,24[17;24H[?25h[?25l[?25h[?25l[1C[7m[[mi][24;67H5[17;25H[?25h[?25l[24;54H3[18;4H[17;25H[7mi]); 
  }[m[24;64H3,4 [18;4H[?25h[?25l[?25h[?25l[24;54H4[19;2H[18;4H[7m 
}[m[24;64H4,2[19;2H[?25h[?25l[?25h[?25l[?25h[?25l[24;54H5[20;1H[19;2H[7m [m[24;64H5,0-1[20;1H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[24;54H6[21;12H[20;1H[7m [m
[7m[32mstatic[m[7m [m[7m[32mvoid[m[24;64H6,12 [21;12H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[24;54H7[22;28H[21;12H[7m 
say_hello([m[7m[32mconst[m[7m [m[7m[32mchar[m[7m *name)[m[24;64H7,28[22;28H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[24;54H8[23;2H[22;28H[7m 
{[m[24;64H8,2 [23;2H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[24;54H9[23;28H[1;23r[23;1H
[1;24r[22;2H[7m 
  printf([m[7m[31m"Hello [m[7m[35m%s\n[m[7m[31m"[m[7m, name[m[46m)[m;[24;53H[K[24;53H19[23;28H[24;63H29,28[9C24%[23;28H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[24;53H20[23;2H[1;23r[23;1H
[1;24r[22;28H[7m); 
}[m[24;53H[K[24;53H20[23;2H[24;63H30,2[10C28%[23;2H[?25h[?25l[?25h[?25l[24;54H1[23;1H[1;23r[23;1H
[1;24r[22;2H[7m [m[24;53H[K[24;53H21[23;1H[24;63H31,0-1[8C32%[23;1H[?25h[?25l[?25h[?25l[?25h[?25l[24;54H2[23;4H[1;23r[23;1H
[1;24r[22;1H[7m [m
[7m[32mint[m[24;53H[K[24;53H22[23;4H[24;63H32,4[10C36%[23;4H[?25h[?25l[?25h[?25l[24;54H3[23;33H[1;23r[23;1H
[1;24r[22;4H[7m 
main([m[7m[32mint[m[7m argc, [m[7m[32mconst[m[7m [m[7m[32mchar[m[7m *argv[[m[46m][m)[24;53H[K[24;53H23[23;33H[24;63H33,33[9C40%[23;33H[?25h[?25l[?25h[?25l[24;54H4[23;2H[1;23r[23;1H
[1;24r[22;33H[7m]) 
{[m[24;53H[K[24;53H24[23;2H[24;63H34,2[10C44%[23;2H[?25h[?25l[?25h[?25l[24;54H5[23;19H[1;23r[23;1H
[1;24r[22;2H[7m 
  [m[7m[33mif[m[7m (argc == [m[7m[31m1[m[7m) {[m[24;53H[K[24;53H25[23;19H[24;63H35,19[9C48%[23;19H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[24;54H6[23;34H[1;23r[23;1H
[1;24r[22;19H[7m 
    fprintf([m[7m[31mstderr[m[7m, [m[7m[31m"usage: [m[7m[35m%s[m[7m[31m NA[m[31mME...[m[35m\n[m[31m"[m, argv[[31m0[m]);[24;53H[K[24;53H26[23;34H[24;63H36,34[9C52%[23;34H[?25h[?25l[?25h[?25l[24;54H7[23;13H[1;23r[23;1H
[1;24r[22;34H[7m[31mME...[m[7m[35m\n[m[7m[31m"[m[7m, argv[[m[7m[31m0[m[7m]); 
    exit([m[7m[31m1[m[7m);[m[24;53H[K[24;53H27[23;13H[24;63H37,13[9C56%[23;13H[?25h[?25l[?25h[?25l[24;54H8[23;4H[1;23r[23;1H
[1;24r[22;13H[7m 
  }[m[24;53H[K[24;53H28[23;4H[24;63H38,4[10C60%[23;4H[?25h[?25l[?25h[?25l[24;54H9[23;9H[1;23r[23;1H
[1;24r[22;4H[7m 
  [m[7m[33melse[m[7m {[m[24;53H[K[24;53H29[23;9H[24;63H39,9[10C64%[23;9H[?25h[?25l[?25h[?25l[?25h[?25l[24;53H30[23;30H[1;23r[23;1H
[1;24r[22;9H[7m 
    [m[7m[33mfor[m[7m ([m[7m[32mint[m[7m i = [m[7m[31m1[m[7m; i < argc;[m i++) {[24;53H[K[24;53H30[23;30H[24;63H40,30[9C68%[23;30H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[24;53H29[22;9H[22;9H[K[23;1H    [33mfor[m ([32mint[m i = [31m1[m; i < argc;[24;63H39,9 [22;9H[?25h[?25l[?25h[?25l[24;54H8[21;4H[21;4H[K[22;1H  [33melse[m {[24;64H8,4[21;4H[?25h[?25l[?25h[?25l[24;54H7[20;13H[20;13H[K[21;1H  }[24;64H7,13[20;13H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[24;54H6[19;28H[31m [m[35m%s[m[31m NAME...[m[35m\n[m[31m"[m, argv[[31m0[m]);[19;53H[K[20;1H    exit([31m1[m);[24;64H6,28[19;28H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[24;54H7[20;13H[19;28H[7m[31m [m[7m[35m%s[m[7m[31m NAME...[m[7m[35m\n[m[7m[31m"[m[7m, argv[[m[7m[31m0[m[7m]); 
    exit([m[7m[31m1[m[7m);[m[24;64H7,13[20;13H[?25h[?25l[?25h[?25l[?25h[?25l[24;54H8[21;4H[20;13H[7m 
  }[m[24;64H8,4 [21;4H[?25h[?25l[?25h[?25l[24;54H9[22;9H[21;4H[7m 
  [m[7m[33melse[m[7m {[m[24;64H9,9[22;9H[?25h[?25l[?25h[?25l[24;53H30[23;30H[22;9H[7m 
    [m[7m[33mfor[m[7m ([m[7m[32mint[m[7m i = [m[7m[31m1[m[7m; i < argc;[m[24;63H40,30[23;30H[?25h[?25l[24;54H1[23;31H[1;23r[23;1H
[1;24r[22;30H[7m i++) { 
      [m[7m[32mconst[m[7m [m[7m[32mchar[m[7m *name = argv[[mi];[24;53H[K[24;53H31[23;31H[24;63H41,31[9C72%[23;31H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[24;54H2[23;32H[1;23r[23;1H
[1;24r[22;31H[7mi]; 
      [m[7m[32mchar[m[7m friendlyName[strlen([mname)];[24;53H[K[24;53H32[23;32H[24;63H42,32[9C76%[23;32H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[24;54H3[23;31H[1;23r[23;1H
[1;24r[22;32H[7mname)]; 
      upcase_words(name, frien[mdlyName);[24;53H[K[24;53H33[23;31H[24;63H43,31[9C80%[23;31H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[24;54H4[23;31H[1;23r[23;1H
[1;24r[22;31H[7mdlyName); 
      say_hello(friendlyName);[m[24;53H[K[24;53H34[23;31H[24;63H44,31[9C84%[23;31H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[24;54H5[23;6H[1;23r[23;1H
[1;24r[22;31H[7m 
    }[m[24;53H[K[24;53H35[23;6H[24;63H45,6[10C88%[23;6H[?25h[?25l[?25h[?25l[24;54H6[23;4H[1;23r[23;1H
[1;24r[22;6H[7m 
  }[m[24;53H[K[24;53H36[23;4H[24;63H46,4[10C92%[23;4H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[24;54H7[23;12H[1;23r[23;1H
[1;24r[22;4H[7m 
  [m[7m[33mreturn[m[7m [m[7m[31m0[m[7m;[m[24;53H[K[24;53H37[23;12H[24;63H47,12[9C96%[23;12H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[24;54H8[23;2H[1;23r[23;1H
[1;24r[22;12H[7m 
}[m[24;53H[K[24;53H38[23;2H[24;63H48,2[10CBot[23;2H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[22;2H[1;23r[23;1H
[1;24r[23;1H[1m[34m~                                                                               [m[24;53H[K[24;53H38[22;2H[24;63H48,2[10CBot[22;2H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[21;2H[1;23r[23;1H
[1;24r[23;1H[1m[34m~                                                                               [m[24;53H[K[24;53H38[21;2H[24;63H48,2[10CBot[21;2H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[20;2H[1;23r[23;1H
[1;24r[23;1H[1m[34m~                                                                               [m[24;53H[K[24;53H38[20;2H[24;63H48,2[10CBot[20;2H[?25h[?25l[?25h[?25l[19;2H[1;23r[23;1H
[1;24r[23;1H[1m[34m~                                                                               [m[24;53H[K[24;53H38[19;2H[24;63H48,2[10CBot[19;2H[?25h[?25l[18;2H[1;23r[23;1H
[1;24r[23;1H[1m[34m~                                                                               [m[24;53H[K[24;53H38[18;2H[24;63H48,2[10CBot[18;2H[?25h[?25l[17;2H[1;23r[23;1H
[1;24r[23;1H[1m[34m~                                                                               [m[24;53H[K[24;53H38[17;2H[24;63H48,2[10CBot[17;2H[?25h[?25l[16;2H[1;23r[23;1H
[1;24r[23;1H[1m[34m~                                                                               [m[24;53H[K[24;53H38[16;2H[24;63H48,2[10CBot[16;2H[?25h[?25l[?25h[?25l[15;2H[1;23r[23;1H
[1;24r[23;1H[1m[34m~                                                                               [m[24;53H[K[24;53H38[15;2H[24;63H48,2[10CBot[15;2H[?25h[?25l[?25h[?25l[14;2H[1;23r[23;1H
[1;24r[23;1H[1m[34m~                                                                               [m[24;53H[K[24;53H38[14;2H[24;63H48,2[10CBot[14;2H[?25h[?25l[13;2H[1;23r[23;1H
[1;24r[23;1H[1m[34m~                                                                               [m[24;53H[K[24;53H38[13;2H[24;63H48,2[10CBot[13;2H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[24;54H3[8;22Hme, friendlyName);[8;40H[K[9;1H      say_hello(friendlyName);[9;31H[K[10;1H    }[10;6H[K[11;1H  }[11;4H[K[12;1H  [33mreturn[m [31m0[m;[12;12H[K[13;1H}[24;64H3,22[8;22H[?25h[?25l[?25h[?25l[24;53H  [11;3H[1;1H    fprintf([31mstderr[m, [31m"usage: [m[35m%s[m[31m NAME...[m[35m\n[m[31m"[m, argv[[31m0[m]);[1;53H[K[2;1H    exit([31m1[m);[2;13H[K[3;1H  }[3;4H[K[4;1H  [33melse[m [46m{[m[4;9H[K[5;1H    [33mfor[m ([32mint[m i = [31m1[m; i < argc; i++) {[5;37H[K[6;1H      [32mconst[m [32mchar[m *name = argv[i];[6;34H[K[7;1H      [32mchar[m friendlyName[strlen(name)];[7;39H[K[8;1H      upcase_words(na[11;3H[46m}[m[24;1H[K[24;63H46,3[10CBot[11;3H[?25h[?25l[24;53H2[11;4H[4;8H{[11;3H[7m}[m[24;1H[1m-- VISUAL --[m[24;53H[K[24;53H2[11;4H[24;63H46,4[10CBot[11;4H[?25h[?25l[?25h[?25l[12;12H[11;4H[7m 
  [m[7m[33mreturn[m[7m [m[7m[31m0[m[7m;[m[24;64H7,12[12;12H[?25h[?25l[?25h[?25l[24;53H [12;11H[11;3H}[11;4H[K[12;1H  [33mreturn[m [31m0[m;[24;1H[K[24;63H47,11[9CBot[12;11H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;1Hmain([32mint[m argc, [32mconst[m [32mchar[m *argv[])
{
  [33mif[m (argc == [31m1[m) {[24;63H[K[24;63H47,11[9CBot[15;11H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;1H}

[32mint[m[24;63H[K[24;63H47,11[9CBot[18;11H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;1Hsay_hello([32mconst[m [32mchar[m *name)
{
  printf([31m"Hello [m[35m%s\n[m[31m"[m, name);[24;63H[K[24;63H47,11[9CBot[21;11H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;1H}

[32mstatic[m [32mvoid[m[24;63H[K[24;63H41,16[9C92%[18;16H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;5H}
    inWord = isalpha(in[i]);
  }[15;18H[46m{[18;3H}[m[24;63H[K[24;63H38,3[10C80%[18;3H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;5H}
    [33melse[m {[3;7Hout[i] = in[i];[18;6H[46m([9C)[m {[21;3H}[24;63H[K[24;63H35,16[9C68%[18;16H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;3H[33mfor[m ([32mint[m i = [31m0[m; i < n; i++) {
    [33mif[m (!inWord && isalpha(in[i])) {[3;7Hout[i] = toupper(in[i]);[21;6H([9C)[24;63H[K[24;63H32,3[10C56%[18;3H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;1H{
  [32mint[m inWord = [31m0[m;
  [32mint[m n = strlen(in);[24;63H[K[24;63H29,16[9C44%[18;16H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;1H[34m */[m
[32mvoid[m
upcase_words([32mconst[m [32mchar[m in[], [32mchar[m out[])[24;63H[K[24;63H26,11[9C32%[18;11H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;1H[34m/** Upcase the initial letter of each word from in, copying the
 *  results into out.  The caller is responsible to ensure that out
 *  has enough space for the strlen(in) characters of in.[m[10;31H[46m{[18;3H}[m[24;63H[K[24;63H23,3[10C20%[18;3H[?25h[?25l[1;23r[1;1H[3L[1;24r[1;1H[35m#include [m[31m<stdlib.h>[m
[35m#include [m[31m<string.h>[m[13;31H{[21;3H}[24;63H[K[24;63H20,16[10C8%[18;16H[?25h[?25l[1;23r[1;1H[2L[1;24r[1;1H[35m#include [m[31m<ctype.h>[m
[35m#include [m[31m<stdio.h>[m[16;36H[46m{[18;5H}[m[24;63H[K[24;63H18,5[10CTop[18;5H[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[?25h[?25l[24;53H9[10;1H[1C[7m[32moid[m[7m 
upcase_words([m[7m[32mconst[m[7m [m[7m[32mchar[m[7m in[], [m[7m[32mchar[m[7m out[]) 
{ 
  [m[7m[32mint[m[7m inWord = [m[7m[31m0[m[7m; 
  [m[7m[32mint[m[7m n = strlen(in); 
  [m[7m[33mfor[m[7m ([m[7m[32mint[m[7m i = [m[7m[31m0[m[7m; i < n; i++) { 
    [m[7m[33mif[m[7m (!inWord && isalpha(in[i])) { 
      out[i] = toupper(in[i]); 
    }[m[24;1H[1m-- VISUAL --[m[24;53H[K[24;53H9[10;1H[24;63H10,1[10CTop[10;1H[?25h[?25l[?25h[?25l[7;1H[1;23r[1;1H[3M[1;24r[21;1H}

[32mstatic[m [32mvoid[m[24;53H[K[24;53H9[7;1H[24;63H10,1[10C12%[7;1H[?25h[?25l[24;53H7[6;1H[1;23r[1;1H[3M[1;24r[4;2H[32moid[m[4;5H[K[5;1Hupcase_words([32mconst[m [32mchar[m in[], [32mchar[m out[])[5;42H[K[6;1H[46m{[18;1H}[m


say_hello([32mconst[m [32mchar[m *name)
{
  printf([31m"Hello [m[35m%s\n[m[31m"[m, name);[24;53H[K[24;53H7[6;1H[24;63H12,1[10C24%[6;1H[?25h[?25l[24;53H4[6;1H[1;23r[1;1H[3M[1;24r[3;1H{[3;2H[K[4;1H  [32mint[m inWord = [31m0[m;[4;18H[K[5;1H  [32mint[m n = strlen(in);[5;22H[K[6;1H [15;1H}[21;1H}

[32mint[m[24;53H[K[24;53H4[6;1H[24;63H15,1[10C36%[6;1H[?25h[?25l[24;53H5[6;1H[1;23r[1;1H[3M[1;24r[3;2H [33mfor[m ([32mint[m i = [31m0[m; i < n; i++) {[3;32H[K[4;1H    [33mif[m (!inWord && isalpha(in[i])) {[4;37H[K[5;1H      out[i] = toupper(in[i]);[5;31H[K[6;1H [21;1Hmain([32mint[m argc, [32mconst[m [32mchar[m *argv[])
{
  [33mif[m (argc == [31m1[m) {[24;53H[K[24;53H5[6;1H[24;63H18,1[10C48%[6;1H[?25h[?25l[24;53H4[6;1H[1;23r[1;1H[3M[1;24r[3;2H   [1C[7m 
    [m[7m[33melse[m[7m { 
      out[i] = in[i]; [m[21;5Hfprintf([31mstderr[m, [31m"usage: [m[35m%s[m[31m NAME...[m[35m\n[m[31m"[m, argv[[31m0[m]);
    exit([31m1[m);
  }[24;53H[K[24;53H4[6;1H[24;63H21,1[10C60%[6;1H[?25h[?25l[24;53H7[6;1H[1;23r[1;1H[3M[1;24r[3;1H[7m    } 
    inWord = isalpha(in[i]); 
  } [m[21;3H[33melse[m {
    [33mfor[m ([32mint[m i = [31m1[m; i < argc; i++) {[23;7H[32mconst[m [32mchar[m *name = argv[i];[24;53H[K[24;53H7[6;1H[24;63H24,1[10C72%[6;1H[?25h[?25l[24;53H10[6;1H[1;23r[1;1H[3M[1;24r[3;1H[7m} 
 [m
[7m[32mstatic[m[7m [m[7m[32mvoid[m[7m [m[21;7H[32mchar[m friendlyName[strlen(name)];[22;7Hupcase_words(name, friendlyName);[23;7Hsay_hello(friendlyName);[24;53H[K[24;53H10[6;1H[24;63H27,1[10C84%[6;1H[?25h[?25l[24;54H3[6;1H[1;23r[1;1H[3M[1;24r[3;1H[7msay_hello([m[7m[32mconst[m[7m [m[7m[32mchar[m[7m *name) 
{ 
  printf([m[7m[31m"Hello [m[7m[35m%s\n[m[7m[31m"[m[7m, name); [m
[46m}[m[21;5H}
  }
  [33mreturn[m [31m0[m;[24;53H[K[24;53H13[6;1H[24;63H30,1[10C96%[6;1H[?25h[?25l[24;53H  [17;21H[1;1H[K[2;1H[32mstatic[m [32mvoid[m[2;12H[K[3;1Hsay_hello([32mconst[m [32mchar[m *name)[3;28H[K[4;1H{[4;2H[K[5;1H  printf([31m"Hello [m[35m%s\n[m[31m"[m, name);[5;30H[K[6;1H}[24;1H[K[24;63H41,21[9C96%[17;21H[?25h[?25l[11;18H[46m{[14;3H}[m[24;63H38,3 [14;3H[?25h[?25l[11;18H{[14;3H}[24;63H41,33[17;33H[?25h[?25l[16;36H[46m{[21;5H}[m[24;64H0,36[16;36H[?25h[?25l[24;53H~@k[16;36H[24;53H   [17;33H[16;36H{[21;5H}[24;64H1,33[17;33H[?25h[?25l[24;53H~@k[17;33H[24;53H   [18;38H[24;64H2,38[18;38H[?25h[?25l[24;53H~@k[18;38H[24;53H   [18;39H[1;23r[23;1H
[1;24r[23;1H}[24;63H[K[24;63H43,39[9CBot[18;39H[?25h[?25l[24;53H~@k[18;39H[24;53H   [19;30H[24;64H4,30[19;30H[?25h[?25l[24;53H~@k[19;30H[24;53H   [20;5H[15;36H[46m{[20;5H}[m[24;64H5,5 [20;5H[?25h[?25l[24;53H~@k[20;5H[24;53H   [21;3H[14;8H[46m{[m[15;36H{[20;5H}
  [46m}[m[24;64H6,3[21;3H[?25h[?25l[24;53H~@k[21;3H[24;53H   [22;11H[14;8H{[21;3H}[24;64H7,11[22;11H[?25h[?25l[24;53H~@k[22;11H[24;53H   [23;1H[9;1H[46m{[23;1H}[m[24;64H8,1 [23;1H[?25h[?25l[24;53H~@k[23;1H[24;53H   [23;1H[?25h[?25l[24;53H~@k[23;1H[24;53H   [23;1H[?25h[?25l[24;53H~@k[23;1H[24;53H   [23;1H[?25h[?25l[24;53H~@k[23;1H[24;53H   [23;1H[?25h[?25l[24;53H~@k[23;1H[24;53H   [22;11H[9;1H{[23;1H}[24;64H7,11[22;11H[?25h[?25l[24;53H~@k[22;11H[24;53H   [21;3H[14;8H[46m{[21;3H}[m[24;64H6,3 [21;3H[?25h[?25l[24;53H~@k[21;3H[24;53H   [20;5H[14;8H{[15;36H[46m{[20;5H}[m
  }[24;64H5,5[20;5H[?25h[?25l[24;53H~@k[20;5H[24;53H   [19;30H[15;36H{[20;5H}[24;64H4,30[19;30H[?25h[?25l[24;53H~@k[19;30H[24;53H   [18;39H[24;64H3,39[18;39H[?25h[?25l[24;53H~@k[18;39H[24;53H   [17;38H[24;64H2,38[17;38H[?25h[?25l[24;53H~@k[17;38H[24;53H   [16;33H[24;64H1,33[16;33H[?25h[?25l[24;53H~@k[16;33H[24;53H   [15;36H[46m{[20;5H}[m[24;64H0,36[15;36H[?25h[?25l[24;53H~@k[15;36H[24;53H   [14;8H[46m{[m[15;36H{[20;5H}
  [46m}[m[24;63H39,8 [14;8H[?25h[?25l[24;53H~@k[14;8H[24;53H   [13;3H[10;18H[46m{[13;3H}[m[14;8H{[21;3H}[24;64H8,3[13;3H[?25h[?25l[24;53H~@k[13;3H[24;53H   [12;12H[10;18H{[13;3H}[24;64H7,12[12;12H[?25h[?25l[24;53H~@k[12;12H[24;53H   [11;39H[24;64H6,39[11;39H[?25h[?25l[24;53H~@k[11;39H[24;53H   [10;18H[46m{[13;3H}[m[24;64H5,18[10;18H[?25h[?25l[24;53H~@k[10;18H[24;53H   [9;1H[46m{[m[10;18H{[13;3H}[23;1H[46m}[m[24;64H4,1 [9;1H[?25h[?25l[24;53H~@k[9;1H[24;53H   [8;34Hmain[46m([28C)[m
{[23;1H}[24;64H3,34[8;34H[?25h[?25l[24;53H~@k[8;34H[24;53H   [7;3H
main([28C)[24;64H2,3 [7;3H[?25h[?25l[24;53H~@k[7;3H[24;53H   [6;1H[24;64H1,0-1[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[4;1H[46m{

}[m[24;63H[K[24;63H30,1[10C96%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;29H[1;23r[1;1H[L[1;24r[1;1H}[5;1H{

}[24;63H[K[24;63H29,29[9C92%[6;29H[?25h[?25l[24;53H~@k[6;29H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;3H}[6;1H[46m{

}[m[24;63H[K[24;63H28,1[10C88%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;27H[1;23r[1;1H[L[1;24r[1;5HinWord = isalpha(in[i]);[6;10H[46m([16C)[m
{

}[24;63H[K[24;63H27,27[9C84%[6;27H[?25h[?25l[24;53H~@k[6;27H[24;53H   [6;11H[1;23r[1;1H[L[1;24r[1;5H}[7;10H([16C)[24;63H[K[24;63H26,11[9C80%[6;11H[?25h[?25l[24;53H~@k[6;11H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;7Hout[i] = in[i];[24;63H[K[24;63H25,0-1[8C76%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;5H[33melse[m {[24;63H[K[24;63H24,1[10C72%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;3H[1;23r[1;1H[L[1;24r[1;5H}[24;63H[K[24;63H23,3[10C68%[6;3H[?25h[?25l[24;53H~@k[6;3H[24;53H   [6;28H[1;23r[1;1H[L[1;24r[1;7Hout[i] = toupper(in[i]);[24;63H[K[24;63H22,28[9C64%[6;28H[?25h[?25l[24;53H~@k[6;28H[24;53H   [6;5H[1;23r[1;1H[L[1;24r[1;5H[33mif[m (!inWord && isalpha(in[i])) {[4;10H[46m{[6;5H}[m[24;63H[K[24;63H21,5[10C60%[6;5H[?25h[?25l[24;53H~@k[6;5H[24;53H   [6;21H[1;23r[1;1H[L[1;24r[1;3H[33mfor[m ([32mint[m i = [31m0[m; i < n; i++) {[5;10H{[7;5H}[24;63H[K[24;63H20,21[9C56%[6;21H[?25h[?25l[24;53H~@k[6;21H[24;53H   [6;10H[1;23r[1;1H[L[1;24r[1;3H[32mint[m n = strlen(in);[6;10H[46m{[8;5H}[m[24;63H[K[24;63H19,10[9C52%[6;10H[?25h[?25l[24;53H~@k[6;10H[24;53H   [6;5H[1;23r[1;1H[L[1;24r[1;3H[32mint[m inWord = [31m0[m;[4;36H[46m{[6;5H}[m[7;10H{[9;5H}[24;63H[K[24;63H18,5[10C48%[6;5H[?25h[?25l[24;53H~@k[6;5H[24;53H   [6;30H[1;23r[1;1H[L[1;24r[1;1H{[5;36H{[7;5H}[24;63H[K[24;63H17,30[9C44%[6;30H[?25h[?25l[24;53H~@k[6;30H[24;53H   [6;36H[1;23r[1;1H[L[1;24r[1;1Hupcase_words([32mconst[m [32mchar[m in[], [32mchar[m out[])[6;36H[46m{[8;5H}[m[24;63H[K[24;63H16,36[9C40%[6;36H[?25h[?25l[24;53H~@k[6;36H[24;53H   [6;31H[1;23r[1;1H[L[1;24r[1;1H[32mvoid[m[6;31H[46m{[m[7;36H{[9;5H}[14;3H[46m}[m[24;63H[K[24;63H15,31[9C36%[6;31H[?25h[?25l[24;53H~@k[6;31H[24;53H   [6;21H[1;23r[1;1H[L[1;24r[1;1H[34m */[m[7;31H{[15;3H}[24;63H[K[24;63H14,21[9C32%[6;21H[?25h[?25l[24;53H~@k[6;21H[24;53H   [6;17H[1;23r[1;1H[L[1;24r[1;1H[34m *  has enough space for the strlen(in) characters of in.[m[24;63H[K[24;63H13,17[9C28%[6;17H[?25h[?25l[24;53H~@k[6;17H[24;53H   [6;1H[1;23r[1;1H[L[1;24r[1;1H[34m *  results into out.  The caller is responsible to ensure that out[m[6;1H[46m{[18;1H}[m[24;63H[K[24;63H12,1[10C24%[6;1H[?25h[?25l[24;53H~@k[6;1H[24;53H   [6;39H[1;23r[1;1H[L[1;24r[1;1H[34m/** Upcase the initial letter of each word from in, copying the[m[6;39H[46m[][m
{[19;1H}[24;63H[K[24;63H11,39[9C20%[6;39H[?25h[?25l[24;53H~@k[6;39H[24;53H   [6;4H[1;23r[1;1H[L[1;24r[7;39H[][24;63H[K[24;63H10,4[10C16%[6;4H[?25h[?25l[24;53H~@k[6;4H[24;53H   [6;3H[1;23r[1;1H[L[1;24r[1;1H[35m#include [m[31m<string.h>[m[24;63H[K[24;63H9,3[11C12%[6;3H[?25h[?25l[24;53H~@k[6;3H[24;53H   [6;39H[1;23r[1;1H[L[1;24r[1;1H[35m#include [m[31m<stdlib.h>[m[6;36H[34m[46m([2C)[m[24;63H[K[24;63H8,39[11C8%[6;39H[?25h[?25l[24;53H~@k[6;39H[24;53H   [6;39H[1;23r[1;1H[L[1;24r[1;1H[35m#include [m[31m<stdio.h>[m[7;36H[34m(in)[m[24;63H[K[24;63H7,39[11C4%[6;39H[?25h[?25l[24;53H~@k[6;39H[24;53H   [7;39H[34m[46m([2C)[m[24;63H8[7;39H[?25h[?25l[24;53H~@k[7;39H[24;53H   [8;3H[7;36H[34m(in)[m[24;63H9,3 [8;3H[?25h[?25l[24;53H~@k[8;3H[24;53H   [9;4H[24;63H10,4[9;4H[?25h[?25l[24;53H~@k[9;4H[24;53H   [10;39H[46m[][m[24;64H1,39[10;39H[?25h[?25l[24;53H~@k[10;39H[24;53H   [11;1H[10;39H[]
[46m{[23;1H}[m[24;64H2,1 [11;1H[?25h[?25l[24;53H~@k[11;1H[24;53H   [12;17H[11;1H{[23;1H}[24;64H3,17[12;17H[?25h[?25l[24;53H~@k[12;17H[24;53H   [13;21H[24;64H4,21[13;21H[?25h[?25l[24;53H~@k[13;21H[24;53H   [14;31H[46m{[22;3H}[m[24;64H5,3[14;31H[?25h[?25l[24;53H~@k[14;31H[24;53H   [15;36H[14;31H{[15;36H[46m{[17;5H}[m[22;3H}[24;64H6,36[15;36H[?25h[?25l[24;53H~@k[15;36H[24;53H   [16;30H[15;36H{[17;5H}[24;64H7,30[16;30H[?25h[?25l[24;53H~@k[16;30H[24;53H   [17;5H[15;36H[46m{[17;5H}[m[24;64H8,5 [17;5H[?25h[?25l[24;53H~@k[17;5H[24;53H   [18;10H[15;36H{[17;5H}[18;10H[46m{[20;5H}[m[24;64H9,10[18;10H[?25h[?25l[24;53H~@k[18;10H[24;53H   [18;21H[1;23r[23;1H
[1;24r[17;10H{[19;5H}[24;63H[K[24;63H20,21[10C8%[18;21H[?25h[?25l[24;53H~@k[18;21H[24;53H   [18;5H[1;23r[23;1H
[1;24r[16;10H[46m{[18;5H}[m[23;1H[32mstatic[m [32mvoid[m[24;63H[K[24;63H21,5[10C12%[18;5H[?25h[?25l[24;53H~@k[18;5H[24;53H   [18;28H[1;23r[23;1H
[1;24r[15;10H{[17;5H}[23;1Hsay_hello([32mconst[m [32mchar[m *name)[24;63H[K[24;63H22,28[9C16%[18;28H[?25h[?25l[24;53H~@k[18;28H[24;53H   [18;3H[1;23r[23;1H
[1;24r[10;31H[46m{[18;3H}[m[23;1H{[24;63H[K[24;63H23,3[10C20%[18;3H[?25h[?25l[24;53H~@k[18;3H[24;53H   [18;1H[1;23r[23;1H
[1;24r[6;1H[46m{[m[9;31H{[17;3H}
[46m}[m[23;3Hprintf([31m"Hello [m[35m%s\n[m[31m"[m, name);[24;63H[K[24;63H24,1[10C24%[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [18;1H[1;23r[23;1H
[1;24r[5;1H{[17;1H}[23;1H}[24;63H[K[24;63H25,0-1[8C28%[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [18;11H[1;23r[23;1H
[1;24r[24;63H[K[24;63H26,11[9C32%[18;11H[?25h[?25l[1;23r[23;1H
[1;24r[18;10H[46m([16C)[m[23;1H[32mint[m[24;63H[K[24;63H27,27[9C36%[18;27H[?25h[?25l[24;53H~@k[18;27H[24;53H   [18;1H[1;23r[23;1H
[1;24r[17;10H([16C)
[46m{

}[m


main([32mint[m argc, [32mconst[m [32mchar[m *argv[])[24;63H[K[24;63H28,1[10C40%[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [18;29H[1;23r[23;1H
[1;24r[17;1H{

}[23;1H{[24;63H[K[24;63H29,29[9C44%[18;29H[?25h[?25l[24;53H~@k[18;29H[24;53H   [18;1H[1;23r[23;1H
[1;24r[16;1H[46m{

}[m[23;3H[33mif[m (argc == [31m1[m) {[24;63H[K[24;63H30,1[10C48%[18;1H[?25h[?25l[24;53H~@k[18;1H[24;53H   [18;1H[1;23r[23;1H
[1;24r[15;1H{

}[23;5Hfprintf([